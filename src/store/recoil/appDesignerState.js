import { atom, selector } from 'recoil';
import { recoilPersist } from 'recoil-persist';
import _ from 'lodash';
import { v4 as uuid } from 'uuid';

const { persistAtom } = recoilPersist({
    key: 'recoil-persist',
    storage: sessionStorage,
});

const buttonFormAttributes = {
    classes: {
        paddingX: 'px-0',
        paddingY: 'py-0',
        marginTop: 'mt-0',
        marginBottom: 'mb-0',
        borderRadius: 'rounded-none',
        textSize: 'text-base',
        fontWeight: 'font-normal',
        borderWidth: 'border-0',
        customClass: '',
        spinnerColor: 'text-[#ffffff]',
        spinnerCustomClass: '',
    },
    prefixClass: {
        default: {
            backgroundColor: 'bg-[#ffffff]',
            borderColor: 'border-[#ffffff]',
            textColor: 'text-[#ffffff]',
        },
        hover: {
            backgroundColor: 'hover:bg-[#ffffff]',
            borderColor: 'hover:border-[#ffffff]',
            textColor: 'hover:text-[#ffffff]',
        },
        focus: {
            ringWidth: 'focus:ring-1',
            ringOffsetWidth: 'focus:ring-offset-2',
            backgroundColor: 'focus:bg-[#ffffff]',
            borderColor: 'focus:border-[#ffffff]',
            ringColor: 'focus:ring-[#ffffff]',
            textColor: 'focus:text-[#ffffff]',
        },
        active: {
            ringWidth: 'active:ring-1',
            ringOffsetWidth: 'active:ring-offset-2',
            boxShadow: 'active:shadow',
            backgroundColor: 'active:bg-[#ffffff]',
            borderColor: 'active:border-[#ffffff]',
            ringColor: 'active:ring-[#ffffff]',
            textColor: 'active:text-[#ffffff]',
        },
        disabled: {
            boxShadow: 'disabled:shadow',
            backgroundColor: 'disabled:bg-[#ffffff]',
            borderColor: 'disabled:border-[#ffffff]',
            textColor: 'disabled:text-[#ffffff]',
        },
    },
    styles: {
        backgroundColor: { backgroundColor: '#ffffff' },
        backgroundColorHover: { backgroundColor: '#ffffff' },
        backgroundColorFocus: { backgroundColor: '#ffffff' },
        backgroundColorActive: { backgroundColor: '#ffffff' },
        backgroundColorDisabled: { backgroundColor: '#ffffff' },
        textColor: { color: '#ffffff' },
        textColorHover: { color: '#ffffff' },
        textColorFocus: { color: '#ffffff' },
        textColorActive: { color: '#ffffff' },
        textColorDisabled: { color: '#ffffff' },
        borderColor: { borderColor: '#ffffff' },
        borderColorHover: { borderColor: '#ffffff' },
        borderColorFocus: { borderColor: '#ffffff' },
        borderColorActive: { borderColor: '#ffffff' },
        borderColorDisabled: { borderColor: '#ffffff' },
        ringColorFocus: { '--tw-ring-color': '' },
        ringColorActive: { '--tw-ring-color': '' },
        spinnerColor: { color: '#ffffff' },
        ringWidthActive: { ringWidth: 'ring-1' },
        ringOffsetWidthActive: { ringOffsetWidth: 'ring-offset-2' },
        ringWidthFocus: { ringWidth: 'ring-1' },
        ringOffsetWidthFocus: { ringOffsetWidth: 'ring-offset-2' },
        boxShadowActive: { boxShadow: 'shadow' },
        boxShadowDisabled: { boxShadow: 'shadow' },
    },
    info: {},
    blocks: {},
};

const footerSettings = {
    info: {
        hasFooter: false,
        corporationText: '',
        corporationUrl: '',
        tel: '',
        time: '',
        copyright: '',
    },
    styles: {
        backgroundColor: { backgroundColor: '#ffffff' },
        textColor: { color: '#ffffff' },
    },
    classes: {
        customClass: '',
        corporationWrapCustomClass: '',
        telTimeWrapCustomClass: '',
        copyrightWrapCustomClass: '',
        height: 'h-auto',
        backgroundColor: 'bg-[#ffffff]',
        textColor: 'text-[#ffffff]',
    },
    prefixClass: {},
    blocks: {},
};
const pageFrameSettings = {
    classes: {
        headerBorderWidth: 'border-0',
        headerDropShadow: 'drop-shadow-none',
        headerPosition: 'undefined',
        headerCustomClass: '',
        contentsBorderWidth: 'border-0',
        contentsBorderStyle: 'border-solid',
        contentsDropShadow: 'drop-shadow-none',
        contentsCustomClass: '',
        stretchCustomClass: '',
        headerMenu1CustomClass: '',
        headerMenu2CustomClass: '',
        headerBackgroundColor: 'bg-[#ffffff]',
        headerBorderColor: 'border-[#ffffff]',
        contentsBackgroundColor: 'bg-[#ffffff]',
        contentsBorderColor: 'border-[#ffffff]',
        stretchBackgroundColor: 'bg-[#ffffff]',
    },
    prefixClass: {
        default: { headerHeight: 'h-auto', contentMarginTop: 'mt-auto' },
        sm: { headerHeight: 'sm:h-auto', contentMarginTop: 'sm:mt-auto' },
        md: { headerHeight: 'md:h-auto', contentMarginTop: 'md:mt-auto' },
        lg: { headerHeight: 'lg:h-auto', contentMarginTop: 'lg:mt-auto' },
        xl: { headerHeight: 'xl:h-auto', contentMarginTop: 'xl:mt-auto' },
        '2xl': { headerHeight: '2xl:h-auto', contentMarginTop: '2xl:mt-auto' },
    },
    styles: {
        headerBackgroundColor: { backgroundColor: '#ffffff' },
        headerBorderColor: { borderColor: '#ffffff' },
        contentsBackgroundColor: { backgroundColor: '#ffffff' },
        contentsBorderColor: { borderColor: '#ffffff' },
        stretchBackgroundColor: { backgroundColor: '#ffffff' },
    },
    info: {
        headerMenu1: false,
        headerMenu1Button: 'a',
        headerMenu1Text: '',
        headerMenu1TextDefault: '',
        headerMenu1TextSm: '',
        headerMenu1TextMd: '',
        headerMenu1TextLg: '',
        headerMenu1TextXl: '',
        headerMenu1Text2xl: '',

        headerMenu2: false,
        headerMenu2Button: 'a',
        headerMenu2Text: '',
        headerMenu2TextDefault: '',
        headerMenu2TextSm: '',
        headerMenu2TextMd: '',
        headerMenu2TextLg: '',
        headerMenu2TextXl: '',
        headerMenu2Text2xl: '',
    },
    blocks: {
        headerMenu1Block: [],
        headerMenu2Block: [],
    },
};

const logoSettings = {
    classes: {
        justifyContent: 'justify-center',
        logoWrapCustomClass: '',
        imageCustomClass: '',
        textCustomClass: '',
        textColor: 'text-[#ffffff]',
    },
    info: {
        linkUrl: '',
        linkTargetBlank: false,
        structure: 1,
        imageUrl: '',
        text: '',
    },
    prefixClass: {
        default: {
            imageHeight: 'h-auto',
            imageWidth: 'w-auto',
            textAlign: 'text-left',
            textSize: 'text-base',
            textWeight: 'font-normal',
            letterSpacing: 'tracking-normal',
        },
        sm: {
            imageHeight: 'sm:h-auto',
            imageWidth: 'sm:w-auto',
            textAlign: 'sm:text-left',
            verticalAlign: 'sm:align-baseline',
            textSize: 'sm:text-base',
            textWeight: 'sm:font-normal',
            letterSpacing: 'sm:tracking-normal',
        },
        md: {
            imageHeight: 'md:h-auto',
            imageWidth: 'md:w-auto',
            textAlign: 'md:text-left',
            verticalAlign: 'md:align-baseline',
            textSize: 'md:text-base',
            textWeight: 'md:font-normal',
            letterSpacing: 'md:tracking-normal',
        },
        lg: {
            imageHeight: 'lg:h-auto',
            imageWidth: 'lg:w-auto',
            textAlign: 'lg:text-left',
            verticalAlign: 'lg:align-baseline',
            textSize: 'lg:text-base',
            textWeight: 'lg:font-normal',
            letterSpacing: 'lg:tracking-normal',
        },
        xl: {
            imageHeight: 'xl:h-auto',
            imageWidth: 'xl:w-auto',
            textAlign: 'xl:text-left',
            verticalAlign: 'xl:align-baseline',
            textSize: 'xl:text-base',
            textWeight: 'xl:font-normal',
            letterSpacing: 'xl:tracking-normal',
        },
        '2xl': {
            imageHeight: '2xl:h-auto',
            imageWidth: '2xl:w-auto',
            textAlign: '2xl:text-left',
            verticalAlign: '2xl:align-baseline',
            textSize: '2xl:text-base',
            textWeight: '2xl:font-normal',
            letterSpacing: '2xl:tracking-normal',
        },
    },
    styles: {
        textColor: { color: '#ffffff' },
    },
};

const informationSettings = {
    classes: {
        infoType1TitleTextSize: 'text-base',
        infoType1TitleFontWeight: 'font-normal',
        infoType1BodyTextSize: 'text-base',
        infoType1BodyFontWeight: 'font-normal',
        infoType1BorderWidth: 'border-0',
        infoType1BorderStyle: 'border-solid',
        infoType1BorderRadius: 'rounded-none',
        infoType1DropShadow: 'drop-shadow-none',
        infoType1CustomClass: '',
        infoType1TitleWrapCustomClass: '',
        infoType1BodyWrapCustomClass: '',
        infoType1BlockWrapCustomClass: '',
        infoType1BelowBlockTextSize: 'text-base',
        infoType1BelowBlockFontWeight: 'font-normal',
        infoType1BelowBlockWrapCustomClass: '',

        infoType2TitleTextSize: 'text-base',
        infoType2TitleFontWeight: 'font-normal',
        infoType2BodyTextSize: 'text-base',
        infoType2BodyFontWeight: 'font-normal',
        infoType2BorderWidth: 'border-0',
        infoType2BorderStyle: 'border-solid',
        infoType2BorderRadius: 'rounded-none',
        infoType2DropShadow: 'drop-shadow-none',
        infoType2CustomClass: '',
        infoType2TitleWrapCustomClass: '',
        infoType2BodyWrapCustomClass: '',
        infoType2BlockWrapCustomClass: '',
        infoType2BelowBlockTextSize: 'text-base',
        infoType2BelowBlockFontWeight: 'font-normal',
        infoType2BelowBlockWrapCustomClass: '',

        infoType3TitleTextSize: 'text-base',
        infoType3TitleFontWeight: 'font-normal',
        infoType3BodyTextSize: 'text-base',
        infoType3BodyFontWeight: 'font-normal',
        infoType3BorderWidth: 'border-0',
        infoType3BorderStyle: 'border-solid',
        infoType3BorderRadius: 'rounded-none',
        infoType3DropShadow: 'drop-shadow-none',
        infoType3CustomClass: '',
        infoType3TitleWrapCustomClass: '',
        infoType3BodyWrapCustomClass: '',
        infoType3BlockWrapCustomClass: '',
        infoType3BelowBlockTextSize: 'text-base',
        infoType3BelowBlockFontWeight: 'font-normal',
        infoType3BelowBlockWrapCustomClass: '',

        infoType4TitleTextSize: 'text-base',
        infoType4TitleFontWeight: 'font-normal',
        infoType4BodyTextSize: 'text-base',
        infoType4BodyFontWeight: 'font-normal',
        infoType4BorderWidth: 'border-0',
        infoType4BorderStyle: 'border-solid',
        infoType4BorderRadius: 'rounded-none',
        infoType4DropShadow: 'drop-shadow-none',
        infoType4CustomClass: '',
        infoType4TitleWrapCustomClass: '',
        infoType4BodyWrapCustomClass: '',
        infoType4BlockWrapCustomClass: '',
        infoType4BelowBlockTextSize: 'text-base',
        infoType4BelowBlockFontWeight: 'font-normal',
        infoType4BelowBlockWrapCustomClass: '',

        infoType5TitleTextSize: 'text-base',
        infoType5TitleFontWeight: 'font-normal',
        infoType5BodyTextSize: 'text-base',
        infoType5BodyFontWeight: 'font-normal',
        infoType5BorderWidth: 'border-0',
        infoType5BorderStyle: 'border-solid',
        infoType5BorderRadius: 'rounded-none',
        infoType5DropShadow: 'drop-shadow-none',
        infoType5CustomClass: '',
        infoType5TitleWrapCustomClass: '',
        infoType5BodyWrapCustomClass: '',
        infoType5BlockWrapCustomClass: '',
        infoType5BelowBlockTextSize: 'text-base',
        infoType5BelowBlockFontWeight: 'font-normal',
        infoType5BelowBlockWrapCustomClass: '',

        infoType1TitleTextColor: 'text-[#ffffff]',
        infoType1BodyTextColor: 'text-[#ffffff]',
        infoType1BelowBlockTextColor: 'text-[#ffffff]',
        infoType1BackgroundColor: 'bg-[#ffffff]',
        infoType1BorderColor: 'border-[#ffffff]',

        infoType2TitleTextColor: 'text-[#ffffff]',
        infoType2BodyTextColor: 'text-[#ffffff]',
        infoType2BelowBlockTextColor: 'text-[#ffffff]',
        infoType2BackgroundColor: 'bg-[#ffffff]',
        infoType2BorderColor: 'border-[#ffffff]',

        infoType3TitleTextColor: 'text-[#ffffff]',
        infoType3BodyTextColor: 'text-[#ffffff]',
        infoType3BelowBlockTextColor: 'text-[#ffffff]',
        infoType3BackgroundColor: 'bg-[#ffffff]',
        infoType3BorderColor: 'border-[#ffffff]',

        infoType4TitleTextColor: 'text-[#ffffff]',
        infoType4BodyTextColor: 'text-[#ffffff]',
        infoType4BelowBlockTextColor: 'text-[#ffffff]',
        infoType4BackgroundColor: 'bg-[#ffffff]',
        infoType4BorderColor: 'border-[#ffffff]',

        infoType5TitleTextColor: 'text-[#ffffff]',
        infoType5BodyTextColor: 'text-[#ffffff]',
        infoType5BelowBlockTextColor: 'text-[#ffffff]',
        infoType5BackgroundColor: 'bg-[#ffffff]',
        infoType5BorderColor: 'border-[#ffffff]',
    },
    styles: {
        infoType1TitleTextColor: { color: '#ffffff' },
        infoType1BodyTextColor: { color: '#ffffff' },
        infoType1BelowBlockTextColor: { color: '#ffffff' },
        infoType1BackgroundColor: { backgroundColor: '#ffffff' },
        infoType1BorderColor: { borderColor: '#ffffff' },

        infoType2TitleTextColor: { color: '#ffffff' },
        infoType2BodyTextColor: { color: '#ffffff' },
        infoType2BelowBlockTextColor: { color: '#ffffff' },
        infoType2BackgroundColor: { backgroundColor: '#ffffff' },
        infoType2BorderColor: { borderColor: '#ffffff' },

        infoType3TitleTextColor: { color: '#ffffff' },
        infoType3BodyTextColor: { color: '#ffffff' },
        infoType3BelowBlockTextColor: { color: '#ffffff' },
        infoType3BackgroundColor: { backgroundColor: '#ffffff' },
        infoType3BorderColor: { borderColor: '#ffffff' },

        infoType4TitleTextColor: { color: '#ffffff' },
        infoType4BodyTextColor: { color: '#ffffff' },
        infoType4BelowBlockTextColor: { color: '#ffffff' },
        infoType4BackgroundColor: { backgroundColor: '#ffffff' },
        infoType4BorderColor: { borderColor: '#ffffff' },

        infoType5TitleTextColor: { color: '#ffffff' },
        infoType5BodyTextColor: { color: '#ffffff' },
        infoType5BelowBlockTextColor: { color: '#ffffff' },
        infoType5BackgroundColor: { backgroundColor: '#ffffff' },
        infoType5BorderColor: { borderColor: '#ffffff' },
    },
};

const stepSettings = {
    classes: {
        borderWidth: 'border-0',
        position: 'undefined',
        wrapCustomClass: '',
        boxCustomClass: '',
        activeBackgroundColor: 'bg-[#ffffff]',
        activeBorderColor: 'border-[#ffffff]',
        activeTextColor: 'text-[#ffffff]',
        disableBackgroundColor: 'bg-[#ffffff]',
        disableBorderColor: 'border-[#ffffff]',
        disableTextColor: 'text-[#ffffff]',
        activeExplanationTextColor: 'text-[#ffffff]',
        disableExplanationTextColor: 'text-[#ffffff]',
    },
    styles: {
        activeBackgroundColor: { backgroundColor: '#ffffff' },
        activeBorderColor: { borderColor: '#ffffff' },
        activeTextColor: { color: '#ffffff' },
        disableBackgroundColor: { backgroundColor: '#ffffff' },
        disableBorderColor: { borderColor: '#ffffff' },
        disableTextColor: { color: '#ffffff' },
        activeExplanationTextColor: { color: '#ffffff' },
        disableExplanationTextColor: { color: '#ffffff' },
    },
    info: {
        quantity: 4,
        stepBoxText: {
            step1: { default: '', sm: '', md: '', lg: '', xl: '', '2xl': '' },
            step2: { default: '', sm: '', md: '', lg: '', xl: '', '2xl': '' },
            step3: { default: '', sm: '', md: '', lg: '', xl: '', '2xl': '' },
            step4: { default: '', sm: '', md: '', lg: '', xl: '', '2xl': '' },
        },
    },
    prefixClass: {
        default: {
            textAlign: 'text-left',
            verticalAlign: 'align-baseline',
            textSize: 'text-base',
            textWeight: 'font-normal',
            letterSpacing: 'tracking-normal',
        },
        sm: {
            textAlign: 'sm:text-left',
            verticalAlign: 'sm:align-baseline',
            textSize: 'sm:text-base',
            textWeight: 'sm:font-normal',
            letterSpacing: 'sm:tracking-normal',
        },
        md: {
            textAlign: 'md:text-left',
            verticalAlign: 'md:align-baseline',
            textSize: 'md:text-base',
            textWeight: 'md:font-normal',
            letterSpacing: 'md:tracking-normal',
        },
        lg: {
            textAlign: 'lg:text-left',
            verticalAlign: 'lg:align-baseline',
            textSize: 'lg:text-base',
            textWeight: 'lg:font-normal',
            letterSpacing: 'lg:tracking-normal',
        },
        xl: {
            textAlign: 'xl:text-left',
            verticalAlign: 'xl:align-baseline',
            textSize: 'xl:text-base',
            textWeight: 'xl:font-normal',
            letterSpacing: 'xl:tracking-normal',
        },
        '2xl': {
            textAlign: '2xl:text-left',
            verticalAlign: '2xl:align-baseline',
            textSize: '2xl:text-base',
            textWeight: '2xl:font-normal',
            letterSpacing: '2xl:tracking-normal',
        },
    },
    blocks: {},
};

const hSettings = {
    classes: {
        customClass: '',
        textColor: 'text-[#ffffff]',
        backgroundColor: 'bg-[#ffffff]',
        borderColor: 'border-[#ffffff]',
    },
    styles: {
        textColor: { color: '#ffffff' },
        backgroundColor: { backgroundColor: '#ffffff' },
        borderColor: { borderColor: '#ffffff' },
    },
    prefixClass: {
        default: {
            textAlign: 'text-left',
            verticalAlign: 'align-baseline',
            textSize: 'text-base',
            textWeight: 'font-normal',
            letterSpacing: 'tracking-normal',
            paddingX: 'px-0',
            paddingY: 'py-0',
            borderRadius: 'rounded-none',
            borderWidth: 'border-0',
            borderStyle: 'border-solid',
            dropShadow: 'drop-shadow-none',
            height: 'h-auto',
        },
        sm: {
            textAlign: 'sm:text-left',
            verticalAlign: 'sm:align-baseline',
            textSize: 'sm:text-base',
            textWeight: 'sm:font-normal',
            letterSpacing: 'sm:tracking-normal',
            paddingX: 'sm:px-0',
            paddingY: 'sm:py-0',
            borderRadius: 'sm:rounded-none',
            borderWidth: 'sm:border-0',
            borderStyle: 'sm:border-solid',
            dropShadow: 'sm:drop-shadow-none',
            height: 'sm:h-auto',
        },
        md: {
            textAlign: 'md:text-left',
            verticalAlign: 'md:align-baseline',
            textSize: 'md:text-base',
            textWeight: 'md:font-normal',
            letterSpacing: 'md:tracking-normal',
            paddingX: 'md:px-0',
            paddingY: 'md:py-0',
            borderRadius: 'md:rounded-none',
            borderWidth: 'md:border-0',
            borderStyle: 'md:border-solid',
            dropShadow: 'md:drop-shadow-none',
            height: 'md:h-auto',
        },
        lg: {
            textAlign: 'lg:text-left',
            verticalAlign: 'lg:align-baseline',
            textSize: 'lg:text-base',
            textWeight: 'lg:font-normal',
            letterSpacing: 'lg:tracking-normal',
            paddingX: 'lg:px-0',
            paddingY: 'lg:py-0',
            borderRadius: 'lg:rounded-none',
            borderWidth: 'lg:border-0',
            borderStyle: 'lg:border-solid',
            dropShadow: 'lg:drop-shadow-none',
            height: 'lg:h-auto',
        },
        xl: {
            textAlign: 'xl:text-left',
            verticalAlign: 'xl:align-baseline',
            textSize: 'xl:text-base',
            textWeight: 'xl:font-normal',
            letterSpacing: 'xl:tracking-normal',
            paddingX: 'xl:px-0',
            paddingY: 'xl:py-0',
            borderRadius: 'xl:rounded-none',
            borderWidth: 'xl:border-0',
            borderStyle: 'xl:border-solid',
            dropShadow: 'xl:drop-shadow-none',
            height: 'xl:h-auto',
        },
        '2xl': {
            textAlign: '2xl:text-left',
            verticalAlign: '2xl:align-baseline',
            textSize: '2xl:text-base',
            textWeight: '2xl:font-normal',
            letterSpacing: '2xl:tracking-normal',
            paddingX: '2xl:px-0',
            paddingY: '2xl:py-0',
            borderRadius: '2xl:rounded-none',
            borderWidth: '2xl:border-0',
            borderStyle: '2xl:border-solid',
            dropShadow: '2xl:drop-shadow-none',
            height: '2xl:h-auto',
        },
    },
};
const faviconSettings = {
    info: {
        shortcutIcon: '',
        appleTouchIcon: '',
        icon: '',
    },
    styles: {},
    classes: {},
    blocks: {},
    prefixClass: {},
};

const checkboxFormSettings = {
    info: {
        useIcon: false,
        notSelectedIcon1: '',
        notSelectedIcon2: '',
        selectedIcon1: '',
        selectedIcon2: '',
    },
    classes: {
        notSelectedIcon1Size: 'text-base',
        notSelectedIcon1StrokeSize: 'stroke-[1px]',
        notSelectedIcon1FillColor: 'fill-[#ffffffff]',
        notSelectedIcon1StrokeColor: 'stroke-[#ffffffff]',
        notSelectedIcon2Size: 'text-base',
        notSelectedIcon2StrokeSize: 'stroke-[1px]',
        notSelectedIcon2FillColor: 'fill-[#ffffffff]',
        notSelectedIcon2StrokeColor: 'stroke-[#ffffffff]',
        selectedIcon1Size: 'text-base',
        selectedIcon1StrokeSize: 'stroke-[1px]',
        selectedIcon1FillColor: 'fill-[#ffffffff]',
        selectedIcon1StrokeColor: 'stroke-[#ffffffff]',
        selectedIcon2Size: 'text-base',
        selectedIcon2StrokeSize: 'stroke-[1px]',
        selectedIcon2FillColor: 'fill-[#ffffffff]',
        selectedIcon2StrokeColor: 'stroke-[#ffffffff]',
    },
    styles: {
        notSelectedIcon1FillColor: { fill: '#ffffff' },
        notSelectedIcon1StrokeColor: { stroke: '#ffffff' },
        notSelectedIcon2FillColor: { fill: '#ffffff' },
        notSelectedIcon2StrokeColor: { stroke: '#ffffff' },
        selectedIcon1FillColor: { fill: '#ffffff' },
        selectedIcon1StrokeColor: { stroke: '#ffffff' },
        selectedIcon2FillColor: { fill: '#ffffff' },
        selectedIcon2StrokeColor: { stroke: '#ffffff' },
    },
    blocks: {},
    prefixClass: {},
};

const radioboxFormSettings = {
    info: {
        useIcon: false,
        notSelectedIcon1: '',
        notSelectedIcon2: '',
        selectedIcon1: '',
        selectedIcon2: '',
    },
    classes: {
        notSelectedIcon1Size: 'text-base',
        notSelectedIcon1StrokeSize: 'stroke-[1px]',
        notSelectedIcon1FillColor: 'fill-[#ffffffff]',
        notSelectedIcon1StrokeColor: 'stroke-[#ffffffff]',
        notSelectedIcon2Size: 'text-base',
        notSelectedIcon2StrokeSize: 'stroke-[1px]',
        notSelectedIcon2FillColor: 'fill-[#ffffffff]',
        notSelectedIcon2StrokeColor: 'stroke-[#ffffffff]',
        selectedIcon1Size: 'text-base',
        selectedIcon1StrokeSize: 'stroke-[1px]',
        selectedIcon1FillColor: 'fill-[#ffffffff]',
        selectedIcon1StrokeColor: 'stroke-[#ffffffff]',
        selectedIcon2Size: 'text-base',
        selectedIcon2StrokeSize: 'stroke-[1px]',
        selectedIcon2FillColor: 'fill-[#ffffffff]',
        selectedIcon2StrokeColor: 'stroke-[#ffffffff]',
    },
    styles: {
        notSelectedIcon1FillColor: { fill: '#ffffff' },
        notSelectedIcon1StrokeColor: { stroke: '#ffffff' },
        notSelectedIcon2FillColor: { fill: '#ffffff' },
        notSelectedIcon2StrokeColor: { stroke: '#ffffff' },
        selectedIcon1FillColor: { fill: '#ffffff' },
        selectedIcon1StrokeColor: { stroke: '#ffffff' },
        selectedIcon2FillColor: { fill: '#ffffff' },
        selectedIcon2StrokeColor: { stroke: '#ffffff' },
    },
    blocks: {},
    prefixClass: {},
};

const inputFormSettings = {
    info: {
        requiredCharacters: '',
        divisionText: '',
    },
    styles: {
        labelTextColor: { color: '#ffffff' },
        requiredTextColor: { color: '#ffffff' },
        requiredBackgroundColor: { backgroundColor: '#ffffff' },
        valueTextColor: { color: '#ffffff' },
        placeholderTextColor: { color: '#ffffff' },
        errorMessageTextColor: { color: '#ffffff' },
        errorMessageBackgroundColor: { backgroundColor: '#ffffff' },
        inputBackgroundColor: { backgroundColor: '#ffffff' },
        inputBorderColor: { borderColor: '#ffffff' },
        divisionTextColor: { color: '#fff' },
    },
    classes: {
        labelTextSize: 'text-base',
        labelFontWeight: 'font-normal',
        labelTextColor: 'text-[#ffffff]',
        labelCustomClass: '',
        requiredTextSize: 'text-base',
        requiredFontWeight: 'font-normal',
        requiredTextColor: 'text-[#ffffff]',
        requiredBackgroundColor: 'bg-[#ffffff]',
        requiredCustomClass: '',
        valueTextSize: 'text-base',
        valueFontWeight: 'font-normal',
        valueTextColor: 'text-[#ffffff]',
        placeholderTextColor: 'placeholder:text-[#ffffff]',
        nonSplitPlaceholderTextColor: 'before:text-[#ffffff]',
        inputCustomClass: '',
        errorMessageTextSize: 'text-base',
        errorMessageFontWeight: 'font-normal',
        errorMessageTextColor: 'text-[#ffffff]',
        errorMessageBackgroundColor: 'bg-[#ffffff]',
        errorMessageCustomClass: '',
        inputWrapCustomClass: '',
        inputBorderWidth: 'border-0',
        inputBorderStyle: 'border-solid',
        inputBorderRadius: 'rounded-none',
        inputBorderColor: 'border-[#ffffff]',
        inputBackgroundColor: 'bg-[#ffffff]',
        divisionTextSize: 'text-base',
        divisionTextWeight: 'font-normal',
        divisionTextColor: 'text-[#ffffff]',
        divisionTextCustomClass: '',
        divisionTextwrapCustomClass: '',
    },
    blocks: {},
    prefixClass: {},
};

const inputCheckboxTextareaFormSettings = {
    info: {
        requiredCharacters: '',
    },
    styles: {
        labelTextColor: { color: '#ffffff' },
        requiredTextColor: { color: '#ffffff' },
        requiredBackgroundColor: { backgroundColor: '#ffffff' },
        valueTextColor: { color: '#ffffff' },
        placeholderTextColor: { color: '#ffffff' },
        errorMessageTextColor: { color: '#ffffff' },
        errorMessageBackgroundColor: { backgroundColor: '#ffffff' },
        inputBackgroundColor: { backgroundColor: '#ffffff' },
        inputBorderColor: { borderColor: '#ffffff' },
    },
    classes: {
        labelTextSize: 'text-base',
        labelFontWeight: 'font-normal',
        labelTextColor: 'text-[#ffffff]',
        labelCustomClass: '',
        requiredTextSize: 'text-base',
        requiredFontWeight: 'font-normal',
        requiredTextColor: 'text-[#ffffff]',
        requiredBackgroundColor: 'bg-[#ffffff]',
        requiredCustomClass: '',
        valueTextSize: 'text-base',
        valueFontWeight: 'font-normal',
        valueTextColor: 'text-[#ffffff]',
        placeholderTextColor: 'text-[#ffffff]',
        inputCustomClass: '',
        errorMessageTextSize: 'text-base',
        errorMessageFontWeight: 'font-normal',
        errorMessageTextColor: 'text-[#ffffff]',
        errorMessageBackgroundColor: 'bg-[#ffffff]',
        errorMessageCustomClass: '',
        inputWrapCustomClass: '',
        inputBorderWidth: 'border-0',
        inputBorderStyle: 'border-solid',
        inputBorderRadius: 'rounded-none',
        inputBorderColor: 'border-[#ffffff]',
        inputBackgroundColor: 'bg-[#ffffff]',
    },
    blocks: {},
    prefixClass: {},
};

const textareaFormSettings = {
    info: {
        requiredCharacters: '',
    },
    styles: {
        labelTextColor: { color: '#ffffff' },
        requiredTextColor: { color: '#ffffff' },
        requiredBackgroundColor: { backgroundColor: '#ffffff' },
        valueTextColor: { color: '#ffffff' },
        placeholderTextColor: { color: '#ffffff' },
        errorMessageTextColor: { color: '#ffffff' },
        errorMessageBackgroundColor: { backgroundColor: '#ffffff' },
        valueBackgroundColor: { backgroundColor: '#ffffff' },
        valueBorderColor: { borderColor: '#ffffff' },
    },
    classes: {
        labelTextSize: 'text-base',
        labelFontWeight: 'font-normal',
        labelTextColor: 'text-[#ffffff]',
        labelCustomClass: '',
        requiredTextSize: 'text-base',
        requiredFontWeight: 'font-normal',
        requiredTextColor: 'text-[#ffffff]',
        requiredBackgroundColor: 'bg-[#ffffff]',
        requiredCustomClass: '',
        valueTextSize: 'text-base',
        valueFontWeight: 'font-normal',
        valueBorderWidth: 'border-0',
        valueBorderStyle: 'border-solid',
        valueBorderRadius: 'rounded-none',
        valueBorderColor: 'border-[#ffffff]',
        valueBackgroundColor: 'bg-[#ffffff]',
        valueTextColor: 'text-[#ffffff]',
        placeholderTextColor: 'placeholder:text-[#ffffff]',
        valueCustomClass: '',
        errorMessageTextSize: 'text-base',
        errorMessageFontWeight: 'font-normal',
        errorMessageTextColor: 'text-[#ffffff]',
        errorMessageBackgroundColor: 'bg-[#ffffff]',
        errorMessageCustomClass: '',
        inputWrapCustomClass: '',
    },
    blocks: {},
    prefixClass: {},
};

const inputTextSettings = {
    info: {
        requiredCharacters: '',
        divisionText: '',
    },
    styles: {
        labelTextColor: { color: '#ffffff' },
        requiredTextColor: { color: '#ffffff' },
        requiredBackgroundColor: { backgroundColor: '#ffffff' },
        valueTextColor: { color: '#ffffff' },
        placeholderTextColor: { color: '#ffffff' },
        errorMessageTextColor: { color: '#ffffff' },
        inputBorderColor: { borderColor: '#ffffff' },
        errorMessageBackgroundColor: { backgroundColor: '#ffffff' },
        inputBackgroundColor: { backgroundColor: '#ffffff' },
        divisionTextColor: { color: '#fff' },
    },
    classes: {
        labelTextSize: 'text-base',
        labelFontWeight: 'font-normal',
        labelTextColor: 'text-[#ffffff]',
        labelCustomClass: '',
        requiredTextSize: 'text-base',
        requiredFontWeight: 'font-normal',
        requiredTextColor: 'text-[#ffffff]',
        requiredBackgroundColor: 'bg-[#ffffff]',
        requiredCustomClass: '',
        valueTextSize: 'text-base',
        valueFontWeight: 'font-normal',
        valueTextColor: 'text-[#ffffff]',
        placeholderTextColor: 'placeholder:text-[#ffffff]',
        inputCustomClass: '',
        errorMessageTextSize: 'text-base',
        errorMessageFontWeight: 'font-normal',
        errorMessageTextColor: 'text-[#ffffff]',
        errorMessageBackgroundColor: 'bg-[#ffffff]',
        errorMessageCustomClass: '',
        inputBorderWidth: 'border-0',
        inputBorderStyle: 'border-solid',
        inputBorderRadius: 'rounded-none',
        inputBorderColor: 'border-[#ffffff]',
        inputBackgroundColor: 'bg-[#ffffff]',
        inputWrapCustomClass: '',
        divisionTextSize: 'text-base',
        divisionTextWeight: 'font-normal',
        divisionTextColor: 'text-[#ffffff]',
        divisionTextCustomClass: '',
        divisionTextwrapCustomClass: '',
    },
    blocks: {},
    prefixClass: {},
};
const combineInputFormSetting = {
    info: {
        requiredCharacters: '',
        divisionText: '',
    },
    styles: {
        labelTextColor: { color: '#ffffff' },
        requiredTextColor: { color: '#ffffff' },
        requiredBackgroundColor: { backgroundColor: '#ffffff' },
        valueTextColor: { color: '#ffffff' },
        placeholderTextColor: { color: '#ffffff' },
        errorMessageTextColor: { color: '#ffffff' },
        errorMessageBackgroundColor: { backgroundColor: '#ffffff' },
        divisionTextColor: { color: '#fff' },
    },
    classes: {
        labelTextSize: 'text-base',
        labelFontWeight: 'font-normal',
        labelTextColor: 'text-[#ffffff]',
        labelCustomClass: '',
        requiredTextSize: 'text-base',
        requiredFontWeight: 'font-normal',
        requiredTextColor: 'text-[#ffffff]',
        requiredBackgroundColor: 'bg-[#ffffff]',
        requiredCustomClass: '',
        valueTextSize: 'text-base',
        valueFontWeight: 'font-normal',
        valueTextColor: 'text-[#ffffff]',
        placeholderTextColor: 'placeholder:text-[#ffffff]',
        inputCustomClass: '',
        errorMessageTextSize: 'text-base',
        errorMessageFontWeight: 'font-normal',
        errorMessageTextColor: 'text-[#ffffff]',
        errorMessageBackgroundColor: 'bg-[#ffffff]',
        errorMessageCustomClass: '',
        inputWrapCustomClass: '',
        divisionTextSize: 'text-base',
        divisionTextWeight: 'font-normal',
        divisionTextColor: 'text-[#ffffff]',
        divisionTextCustomClass: '',
        divisionTextwrapCustomClass: '',
    },
    blocks: {},
    prefixClass: {},
};
const radioAFormSettings = {
    info: {
        requiredCharacters: '',
    },
    styles: {
        labelTextColor: { color: '#ffffff' },
        requiredTextColor: { color: '#ffffff' },
        requiredBackgroundColor: { backgroundColor: '#ffffff' },
        errorMessageTextColor: { color: '#ffffff' },
        errorMessageBackgroundColor: { backgroundColor: '#ffffff' },

        unSelectButtonTextColor: { color: '#ffffff' },
        unSelectButtonTextColorHover: { color: '#ffffff' },
        unSelectButtonTextColorFocus: { color: '#ffffff' },
        unSelectButtonTextColorActive: { color: '#ffffff' },
        unSelectButtonTextColorDisabled: { color: '#ffffff' },

        unSelectButtonBackgroundColor: { backgroundColor: '#ffffff' },
        unSelectButtonBackgroundColorHover: { backgroundColor: '#ffffff' },
        unSelectButtonBackgroundColorFocus: { backgroundColor: '#ffffff' },
        unSelectButtonBackgroundColorActive: { backgroundColor: '#ffffff' },
        unSelectButtonBackgroundColorDisabled: { backgroundColor: '#ffffff' },

        unSelectButtonBorderColor: { borderColor: '#ffffff' },
        unSelectButtonBorderColorHover: { borderColor: '#ffffff' },
        unSelectButtonBorderColorFocus: { borderColor: '#ffffff' },
        unSelectButtonBorderColorActive: { borderColor: '#ffffff' },
        unSelectButtonBorderColorDisabled: { borderColor: '#ffffff' },

        selectButtonTextColor: { color: '#ffffff' },
        selectButtonTextColorHover: { color: '#ffffff' },
        selectButtonTextColorFocus: { color: '#ffffff' },
        selectButtonTextColorActive: { color: '#ffffff' },
        selectButtonTextColorDisabled: { color: '#ffffff' },

        selectButtonBackgroundColor: { backgroundColor: '#ffffff' },
        selectButtonBackgroundColorHover: { backgroundColor: '#ffffff' },
        selectButtonBackgroundColorFocus: { backgroundColor: '#ffffff' },
        selectButtonBackgroundColorActive: { backgroundColor: '#ffffff' },
        selectButtonBackgroundColorDisabled: { backgroundColor: '#ffffff' },

        selectButtonBorderColor: { borderColor: '#ffffff' },
        selectButtonBorderColorHover: { borderColor: '#ffffff' },
        selectButtonBorderColorFocus: { borderColor: '#ffffff' },
        selectButtonBorderColorActive: { borderColor: '#ffffff' },
        selectButtonBorderColorDisabled: { borderColor: '#ffffff' },
    },
    classes: {
        labelTextSize: 'text-base',
        labelFontWeight: 'font-normal',
        labelTextColor: 'text-[#ffffff]',
        labelCustomClass: '',
        requiredTextSize: 'text-base',
        requiredFontWeight: 'font-normal',
        requiredTextColor: 'text-[#ffffff]',
        requiredBackgroundColor: 'bg-[#ffffff]',
        requiredCustomClass: '',
        buttonTextSize: 'text-base',
        buttonFontWeight: 'font-normal',
        buttonWidth: 'w-auto',
        buttonBorderRadius: 'rounded-none',
        buttonSpaceBetweenX: 'space-x-0',
        unSelectButtonBorderWidth: 'border-0',
        unSelectButtonBorderStyle: 'border-solid',
        selectButtonBorderWidth: 'border-0',
        selectButtonBorderStyle: 'border-solid',

        errorMessageTextSize: 'text-base',
        errorMessageFontWeight: 'font-normal',
        errorMessageTextColor: 'text-[#ffffff]',
        errorMessageBackgroundColor: 'bg-[#ffffff]',
        errorMessageCustomClass: '',
        buttonCustomClass: '',
        radioAWrapCustomClass: '',
    },
    blocks: {},
    prefixClass: {
        default: {
            unSelectButtonBackgroundColor: 'bg-[#ffffff]',
            unSelectButtonBorderColor: 'border-[#ffffff]',
            unSelectButtonTextColor: 'text-[#ffffff]',
            selectButtonBackgroundColor: 'peer-checked:bg-[#ffffff]',
            selectButtonTextColor: 'peer-checked:text-[#ffffff]',
            selectButtonBorderColor: 'peer-checked:border-[#ffffff]',
        },
        hover: {
            unSelectButtonBackgroundColor: 'hover:bg-[#ffffff]',
            unSelectButtonBorderColor: 'hover:border-[#ffffff]',
            unSelectButtonTextColor: 'hover:text-[#ffffff]',
            selectButtonBackgroundColor: 'peer-checked:hover:bg-[#ffffff]',
            selectButtonBorderColor: 'peer-checked:hover:border-[#ffffff]',
            selectButtonTextColor: 'peer-checked:hover:text-[#ffffff]',
        },
        focus: {
            unSelectButtonBackgroundColor: 'focus:bg-[#ffffff]',
            unSelectButtonBorderColor: 'focus:border-[#ffffff]',
            unSelectButtonTextColor: 'focus:text-[#ffffff]',
            selectButtonBackgroundColor: 'peer-checked:focus:bg-[#ffffff]',
            selectButtonBorderColor: 'peer-checked:focus:border-[#ffffff]',
            selectButtonTextColor: 'peer-checked:focus:text-[#ffffff]',
        },
        active: {
            unSelectButtonBackgroundColor: 'active:bg-[#ffffff]',
            unSelectButtonBorderColor: 'active:border-[#ffffff]',
            unSelectButtonTextColor: 'active:text-[#ffffff]',
            selectButtonBackgroundColor: 'peer-checked:active:bg-[#ffffff]',
            selectButtonBorderColor: 'peer-checked:active:border-[#ffffff]',
            selectButtonTextColor: 'peer-checked:active:text-[#ffffff]',
        },
        disabled: {
            unSelectButtonBackgroundColor: 'disabled:bg-[#ffffff]',
            unSelectButtonBorderColor: 'disabled:border-[#ffffff]',
            unSelectButtonTextColor: 'disabled:text-[#ffffff]',
            selectButtonBackgroundColor: 'peer-checked:disabled:bg-[#ffffff]',
            selectButtonBorderColor: 'peer-checked:disabled:border-[#ffffff]',
            selectButtonTextColor: 'peer-checked:disabled:text-[#ffffff]',
        },
    },
};
const radioBFormSettings = {
    info: {
        requiredCharacters: '',
    },
    styles: {
        labelTextColor: { color: '#ffffff' },
        requiredTextColor: { color: '#ffffff' },
        requiredBackgroundColor: { backgroundColor: '#ffffff' },
        valueTextColor: { color: '#ffffff' },
        errorMessageTextColor: { color: '#ffffff' },
        errorMessageBackgroundColor: { backgroundColor: '#ffffff' },
    },
    classes: {
        labelTextSize: 'text-base',
        labelFontWeight: 'font-normal',
        labelTextColor: 'text-[#ffffff]',
        labelCustomClass: '',
        requiredTextSize: 'text-base',
        requiredFontWeight: 'font-normal',
        requiredTextColor: 'text-[#ffffff]',
        requiredBackgroundColor: 'bg-[#ffffff]',
        requiredCustomClass: '',
        valueTextSize: 'text-base',
        valueFontWeight: 'font-normal',
        valueTextColor: 'text-[#ffffff]',
        inputCustomClass: '',
        errorMessageTextSize: 'text-base',
        errorMessageFontWeight: 'font-normal',
        errorMessageTextColor: 'text-[#ffffff]',
        errorMessageBackgroundColor: 'bg-[#ffffff]',
        errorMessageCustomClass: '',
        inputWrapCustomClass: '',
    },
    blocks: {},
    prefixClass: {},
};

const slotSelection1Settings = {
    info: {
        explanatoryNoteOutOfStockText: '',
        explanatoryThresholdOutOfStock: 0,
        explanatoryNoteOutOfStockSvg1: '',
        explanatoryNoteOutOfStockSvg2: '',
        explanatoryNoteLowStockText: '',
        explanatoryThresholdLowStock: 0,
        explanatoryNoteLowStockSvg1: '',
        explanatoryNoteLowStockSvg2: '',
        explanatoryNoteInStockText: '',
        explanatoryNoteInStockSvg1: '',
        explanatoryNoteInStockSvg2: '',

        navigationLastMonthText: '',
        navigationLastWeekText: '',
        navigationLastMonthSvg1: '',
        navigationLastMonthSvg2: '',
        navigationLastWeekSvg1: '',
        navigationLastWeekSvg2: '',
        navigationNextMonthText: '',
        navigationNextWeekText: '',
        navigationNextMonthSvg1: '',
        navigationNextMonthSvg2: '',
        navigationNextWeekSvg1: '',
        navigationNextWeekSvg2: '',

        columnDayHeaderText: '',
        columnDepartureTimeHeaderText: '',
        columnBusStopHeaderText: '',
        columnRemainingSeatsHeaderText: '',
        columnTimeHeaderText: '',

        rowDayHeaderText: '',
        cellsLeftText: '',
        cellsCenterText: '',
    },
    classes: {
        slotWrapBorderColor: 'border-[#ffffff]',
        slotWrapBackgroundColor: 'bg-[#ffffff]',
        busWrapCustomClass: '',
        deliveryWrapCustomClass: '',
        normalWrapCustomClass: '',
        slotOuterWrapCustomClass: '',

        explanatoryNoteTextSize: 'text-base',
        explanatoryNoteFontWeight: 'font-normal',
        explanatoryNoteTextColor: 'text-[#ffffff]',

        explanatoryNoteOutOfStockSvg1FillColor: 'fill-[#ffffffff]',
        explanatoryNoteOutOfStockSvg1StrokeColor: 'stroke-[#ffffffff]',
        explanatoryNoteOutOfStockSvg2FillColor: 'fill-[#ffffffff]',
        explanatoryNoteOutOfStockSvg2StrokeColor: 'stroke-[#ffffffff]',
        explanatoryNoteOutOfStockSvg1Size: 'text-base',
        explanatoryNoteOutOfStockSvg2Size: 'text-base',

        explanatoryNoteLowStockSvg1FillColor: 'fill-[#ffffffff]',
        explanatoryNoteLowStockSvg1StrokeColor: 'stroke-[#ffffffff]',
        explanatoryNoteLowStockSvg2FillColor: 'fill-[#ffffffff]',
        explanatoryNoteLowStockSvg2StrokeColor: 'stroke-[#ffffffff]',
        explanatoryNoteLowStockSvg1Size: 'text-base',
        explanatoryNoteLowStockSvg2Size: 'text-base',

        explanatoryNoteInStockSvg1FillColor: 'fill-[#ffffffff]',
        explanatoryNoteInStockSvg1StrokeColor: 'stroke-[#ffffffff]',
        explanatoryNoteInStockSvg2FillColor: 'fill-[#ffffffff]',
        explanatoryNoteInStockSvg2StrokeColor: 'stroke-[#ffffffff]',
        explanatoryNoteInStockSvg1Size: 'text-base',
        explanatoryNoteInStockSvg2Size: 'text-base',

        explanatoryNoteWrapCustomClass: '',

        navigationTextSize: 'text-base',
        navigationFontWeight: 'font-normal',
        navigationBorderWidth: 'justify-center',
        navigationBorderStyle: 'border-solid',
        navigationBorderRadius: 'rounded-none',
        navigationGap: 'gap-x-0',
        navigationLastMonthCustomClass: '',
        navigationLastWeekCustomClass: '',
        navigationLastMonthSvg1FillColor: 'fill-[#ffffffff]',
        navigationLastMonthSvg1StrokeColor: 'stroke-[#ffffffff]',
        navigationLastMonthSvg2FillColor: 'fill-[#ffffffff]',
        navigationLastMonthSvg2StrokeColor: 'stroke-[#ffffffff]',
        navigationLastMonthSvg1Size: 'text-base',
        navigationLastMonthSvg2Size: 'text-base',

        navigationLastWeekSvg1FillColor: 'fill-[#ffffffff]',
        navigationLastWeekSvg1StrokeColor: 'stroke-[#ffffffff]',
        navigationLastWeekSvg2FillColor: 'fill-[#ffffffff]',
        navigationLastWeekSvg2StrokeColor: 'stroke-[#ffffffff]',
        navigationLastWeekSvg1Size: 'text-base',
        navigationLastWeekSvg2Size: 'text-base',

        navigationWrapCustomClass: '',
        navigationNextMonthCustomClass: '',
        navigationNextWeekCustomClass: '',
        navigationNextMonthSvg1FillColor: 'fill-[#ffffffff]',
        navigationNextMonthSvg1StrokeColor: 'stroke-[#ffffffff]',
        navigationNextMonthSvg2FillColor: 'fill-[#ffffffff]',
        navigationNextMonthSvg2StrokeColor: 'stroke-[#ffffffff]',
        navigationNextMonthSvg1Size: 'text-base',
        navigationNextMonthSvg2Size: 'text-base',

        navigationNextWeekSvg1FillColor: 'fill-[#ffffffff]',
        navigationNextWeekSvg1StrokeColor: 'stroke-[#ffffffff]',
        navigationNextWeekSvg2FillColor: 'fill-[#ffffffff]',
        navigationNextWeekSvg2StrokeColor: 'stroke-[#ffffffff]',
        navigationNextWeekSvg1Size: 'text-base',
        navigationNextWeekSvg2Size: 'text-base',

        navigationMonthWrapCustomClass: '',

        columnHeaderTextSize: 'text-base',
        columnHeaderFontWeight: 'font-normal',
        columnDayHeaderCustomClass: '',
        columnDepartureTimeHeaderCustomClass: '',
        columnBusStopHeaderCustomClass: '',
        columnRemainingSeatsHeaderCustomClass: '',
        columnDayHeaderTextColor: 'text-[#ffffff]',
        columnDayHeaderBackgroundColor: 'bg-[#ffffff]',
        columnDepartureTimeHeaderTextColor: 'text-[#ffffff]',
        columnDepartureTimeHeaderBackgroundColor: 'bg-[#ffffff]',
        columnBusStopHeaderTextColor: 'text-[#ffffff]',
        columnBusStopHeaderBackgroundColor: 'bg-[#ffffff]',
        columnRemainingSeatsHeaderTextColor: 'text-[#ffffff]',
        columnRemainingSeatsHeaderBackgroundColor: 'bg-[#ffffff]',
        columnTimeHeaderTextColor: 'text-[#ffffff]',
        columnTimeHeaderBackgroundColor: 'bg-[#ffffff]',
        columnSundayHeaderTextColor: 'text-[#ffffff]',
        columnSundayHeaderBackgroundColor: 'bg-[#ffffff]',
        columnWeekdayHeaderTextColor: 'text-[#ffffff]',
        columnWeekdayHeaderBackgroundColor: 'bg-[#ffffff]',
        columnSaturdayHeaderTextColor: 'text-[#ffffff]',
        columnSaturdayHeaderBackgroundColor: 'bg-[#ffffff]',
        columnTimeHeaderCustomClass: '',
        columnSundayHeaderSundayCustomClass: '',
        columnWeekdayHeaderSundayCustomClass: '',
        columnSaturdayHeaderSundayCustomClass: '',

        rowHeaderTextSize: 'text-base',
        rowHeaderFontWeight: 'font-normal',
        rowHeaderTextColor: 'text-[#ffffff]',
        //rowHeaderBackgroundColor: "bg-[#ffffff]",
        rowHeaderCustomClass: '',
        rowDayHeaderCustomClass: '',
        rowInstituteHeaderTextSize: 'text-base',
        rowInstituteHeaderFontWeight: 'font-normal',
        rowInstituteHeaderLineClamp: 'line-clamp-none',
        rowInstituteHeaderHeight: 'h-0',
        rowInstituteHeaderTextColor: 'text-[#ffffff]',
        rownstituteHeaderBackgroundColor: 'bg-[#ffffff]',
        rowInstituteHeaderCustomClass: '',

        cellsTextSize: 'text-base',
        cellsFontWeight: 'font-normal',
        cellsTextWrapCustomClass: '',
        cellsIconWrapCustomClass: '',
        cellsAllWrapCustomClass: '',
        cellsTextColor: 'text-[#ffffff]',
        rowBackgroundColorEven: 'bg-[#ffffff]',
        rowBackgroundColorOdd: 'bg-[#ffffff]',
        cellOutOfStockSvg1Size: 'text-base',
        cellOutOfStockSvg2Size: 'text-base',
        cellLowStockSvg1Size: 'text-base',
        cellLowStockSvg2Size: 'text-base',
        cellInStockSvg1Size: 'text-base',
        cellInStockSvg2Size: 'text-base',
    },
    styles: {
        slotWrapBorderColor: { borderColor: '#ffffff' },
        slotWrapBackgroundColor: { backgroundColor: '#ffffff' },
        explanatoryNoteTextColor: { color: '#ffffff' },
        explanatoryNoteOutOfStockSvg1FillColor: { fill: '#ffffff' },
        explanatoryNoteOutOfStockSvg1StrokeColor: { stroke: '#ffffff' },
        explanatoryNoteOutOfStockSvg2FillColor: { fill: '#ffffff' },
        explanatoryNoteOutOfStockSvg2StrokeColor: { stroke: '#ffffff' },
        explanatoryNoteLowStockSvg1FillColor: { fill: '#ffffff' },
        explanatoryNoteLowStockSvg1StrokeColor: { stroke: '#ffffff' },
        explanatoryNoteLowStockSvg2FillColor: { fill: '#ffffff' },
        explanatoryNoteLowStockSvg2StrokeColor: { stroke: '#ffffff' },
        explanatoryNoteInStockSvg1FillColor: { fill: '#ffffff' },
        explanatoryNoteInStockSvg1StrokeColor: { stroke: '#ffffff' },
        explanatoryNoteInStockSvg2FillColor: { fill: '#ffffff' },
        explanatoryNoteInStockSvg2StrokeColor: { stroke: '#ffffff' },
        navigationLastMonthSvg1FillColor: { fill: '#ffffff' },
        navigationLastMonthSvg1StrokeColor: { stroke: '#ffffff' },
        navigationLastMonthSvg2FillColor: { fill: '#ffffff' },
        navigationLastMonthSvg2StrokeColor: { stroke: '#ffffff' },
        navigationLastWeekSvg1FillColor: { fill: '#ffffff' },
        navigationLastWeekSvg1StrokeColor: { stroke: '#ffffff' },
        navigationLastWeekSvg2FillColor: { fill: '#ffffff' },
        navigationLastWeekSvg2StrokeColor: { stroke: '#ffffff' },
        navigationTextColor: { color: '#ffffff' },
        navigationTextColorHover: { color: '#ffffff' },
        navigationTextColorFocus: { color: '#ffffff' },
        navigationTextColorActive: { color: '#ffffff' },
        navigationTextColorDisabled: { color: '#bae6fd' },
        navigationBackgroundColor: { backgroundColor: '#ffffff' },
        navigationBackgroundColorHover: { backgroundColor: '#ffffff' },
        navigationBackgroundColorFocus: { backgroundColor: '#ffffff' },
        navigationBackgroundColorActive: { backgroundColor: '#ffffff' },
        navigationBackgroundColorDisabled: { backgroundColor: '#ffffff' },

        navigationBoderColor: { borderColor: '#E5E7EB' },
        navigationBoderColorHover: { borderColor: '#E5E7EB' },
        navigationBoderColorFocus: { borderColor: '#E5E7EB' },
        navigationBoderColorActive: { borderColor: '#E5E7EB' },
        navigationBoderColorDisabled: { borderColor: '#bae6fd' },

        navigationNextMonthSvg1FillColor: { fill: '#ffffff' },
        navigationNextMonthSvg1StrokeColor: { stroke: '#ffffff' },
        navigationNextMonthSvg2FillColor: { fill: '#ffffff' },
        navigationNextMonthSvg2StrokeColor: { stroke: '#ffffff' },
        navigationNextWeekSvg1FillColor: { fill: '#ffffff' },
        navigationNextWeekSvg1StrokeColor: { stroke: '#ffffff' },
        navigationNextWeekSvg2FillColor: { fill: '#ffffff' },
        navigationNextWeekSvg2StrokeColor: { stroke: '#ffffff' },

        columnDayHeaderTextColor: { color: '#ffffff' },
        columnDayHeaderBackgroundColor: { backgroundColor: '#ffffff' },
        columnDepartureTimeHeaderTextColor: { color: '#ffffff' },
        columnDepartureTimeHeaderBackgroundColor: { backgroundColor: '#ffffff' },
        columnBusStopHeaderTextColor: { color: '#ffffff' },
        columnBusStopHeaderBackgroundColor: { backgroundColor: '#ffffff' },
        columnRemainingSeatsHeaderTextColor: { color: '#ffffff' },
        columnRemainingSeatsHeaderBackgroundColor: { backgroundColor: '#ffffff' },

        columnTimeHeaderTextColor: { color: '#ffffff' },
        columnTimeHeaderBackgroundColor: { backgroundColor: '#ffffff' },
        columnSundayHeaderTextColor: { color: '#ffffff' },
        columnSundayHeaderBackgroundColor: { backgroundColor: '#ffffff' },
        columnWeekdayHeaderTextColor: { color: '#ffffff' },
        columnWeekdayHeaderBackgroundColor: { backgroundColor: '#ffffff' },
        columnSaturdayHeaderTextColor: { color: '#ffffff' },
        columnSaturdayHeaderBackgroundColor: { backgroundColor: '#ffffff' },

        columnInstituteHeaderTextColor: { color: '#ffffff' },
        columnInstituteHeaderBackgroundColor: { backgroundColor: '#ffffff' },
        rowHeaderTextColor: { color: '#ffffff' },
        //rowHeaderBackgroundColor: { backgroundColor: "#ffffff" },
        rowInstituteHeaderTextColor: { color: '#ffffff' },
        rownstituteHeaderBackgroundColor: { backgroundColor: '#ffffff' },
        cellsTextColor: { color: '#ffffff' },
    },
    prefixClass: {
        default: {
            slotWrapBorderRadius: 'rounded-none',
            slotWrapBorderWidth: 'border-0',
            slotWrapBorderStyle: 'border-solid',
            slotWrapMarginX: 'mx-0',

            navigationTextColor: 'text-[#ffffff]',
            navigationBackgroundColor: 'bg-[#ffffff]',
            navigationBoderColor: 'border-[#E5E7EB]',
        },
        sm: {
            slotWrapBorderRadius: 'sm:rounded-none',
            slotWrapBorderWidth: 'sm:border-0',
            slotWrapBorderStyle: 'sm:border-solid',
            slotWrapMarginX: 'sm:mx-0',
        },
        md: {
            slotWrapBorderRadius: 'md:rounded-none',
            slotWrapBorderWidth: 'md:border-0',
            slotWrapBorderStyle: 'md:border-solid',
            slotWrapMarginX: 'md:mx-0',
        },
        lg: {
            slotWrapBorderRadius: 'lg:rounded-none',
            slotWrapBorderWidth: 'lg:border-0',
            slotWrapBorderStyle: 'lg:border-solid',
            slotWrapMarginX: 'lg:mx-0',
        },
        xl: {
            slotWrapBorderRadius: 'xl:rounded-none',
            slotWrapBorderWidth: 'xl:border-0',
            slotWrapBorderStyle: 'xl:border-solid',
            slotWrapMarginX: 'xl:mx-0',
        },
        '2xl': {
            slotWrapBorderRadius: '2xl:rounded-none',
            slotWrapBorderWidth: '2xl:border-0',
            slotWrapBorderStyle: '2xl:border-solid',
            slotWrapMarginX: '2xl:mx-0',
        },
        hover: {
            navigationTextColor: 'hover:text-[#ffffff]',
            navigationBackgroundColor: 'hover:bg-[#ffffff]',
            navigationBoderColor: 'hover:border-[#E5E7EB]',
        },
        focus: {
            navigationTextColor: 'focus:text-[#ffffff]',
            navigationBackgroundColor: 'focus:bg-[#ffffff]',
            navigationBoderColor: 'focus:border-[#E5E7EB]',
        },
        active: {
            navigationTextColor: 'active:text-[#ffffff]',
            navigationBackgroundColor: 'active:bg-[#ffffff]',
            navigationBoderColor: 'active:border-[#E5E7EB]',
        },
        disabled: {
            navigationTextColor: 'disabled:text-[#bae6fd]',
            navigationBackgroundColor: 'disabled:bg-[#ffffff]',
            navigationBoderColor: 'disabled:border-[#bae6fd]',
        },
    },
    blocks: {},
};

const slotSelection2Settings = {
    info: {
        isSticky: 0,
        dentalCheckText: '',
        outOfStockText: '',
        outOfStockThreshold: 0,
        outOfStockSvg1: '',
        outOfStockSvg2: '',
        lowStockText: '',
        lowStockThreshold: 0,
        lowStockSvg1: '',
        lowStockSvg2: '',
        inStockText: '',
        inStockSvg1: '',
        inStockSvg2: '',
    },
    classes: {
        slotDivideWidthY: 'divide-y-0',
        slotDivideStyle: 'divide-solid',
        slotBorderColor: 'border-[#ffffff]',
        slotDivideColor: 'divide-[#ffffff]',
        slotBoxShadowColor: 'shadow-[#ffffff]',
        slotWrapCustomClass: '',
        slotHeaderCustomClass: '',
        slotHeaderBackgroundColor: 'bg-[#ffffff]',
        dentalCheckTextSize: 'text-base',
        dentalCheckFontWeight: 'font-normal',
        dentalCheckBorderRadius: 'rounded-none',
        dentalCheckCustomClass: '',
        dentalCheckTextColor: 'text-[#ffffff]',
        dentalCheckBackgroundColor: 'bg-[#ffffff]',
        insituteNameTextSize: 'text-base',
        insituteNameFontWeight: 'font-normal',
        insituteNameCustomClass: '',
        insituteNameTextColor: 'text-[#ffffff]',
        insituteAdressTextSize: 'text-base',
        insituteAdressFontWeight: 'font-normal',
        insituteAdressCustomClass: '',
        insituteAdressTextColor: 'text-[#ffffff]',
        dayTextSize: 'text-base',
        dayFontWeight: 'font-normal',
        dayCustomClass: '',
        dayTextColor: 'text-[#ffffff]',
        slotRowWrapCustomClass: '',
        timeTextSize: 'text-base',
        timeFontWeight: 'font-normal',
        timeCustomClass: '',

        outOfStockIcon1TextSize: 'text-base',
        outOfStockIcon2TextSize: 'text-base',
        outOfStockCustomClass: '',
        outOfStockSvg1FillColor: 'fill-[#ffffffff]',
        outOfStockSvg1StrokeColor: 'stroke-[#ffffffff]',
        outOfStockSvg2FillColor: 'fill-[#ffffffff]',
        outOfStockSvg2StrokeColor: 'stroke-[#ffffffff]',
        outOfStockTextColor: 'text-[#ffffff]',

        lowStockIcon1TextSize: 'text-base',
        lowStockIcon2TextSize: 'text-base',
        lowStockCustomClass: '',
        lowStockSvg1FillColor: 'fill-[#ffffffff]',
        lowStockSvg1StrokeColor: 'stroke-[#ffffffff]',
        lowStockSvg2FillColor: 'fill-[#ffffffff]',
        lowStockSvg2StrokeColor: 'stroke-[#ffffffff]',
        lowStockTextColor: 'text-[#ffffff]',

        inStockIcon1TextSize: 'text-base',
        inStockIcon2TextSize: 'text-base',
        inStockCustomClass: '',
        inStockSvg1FillColor: 'fill-[#ffffffff]',
        inStockSvg1StrokeColor: 'stroke-[#ffffffff]',
        inStockSvg2FillColor: 'fill-[#ffffffff]',
        inStockSvg2StrokeColor: 'stroke-[#ffffffff]',
        inStockTextColor: 'text-[#ffffff]',

        stockStatusTextSize: 'text-base',
        stockStatusFontWeight: 'font-normal',
        stockStatusCustomClass: '',
    },
    styles: {
        timeTextColorEven: { color: '#ffffff' },
        rowBackgroundColorEven: { backgroundColor: '#ffffff' },
        timeTextColorOdd: { color: '#ffffff' },
        rowBackgroundColorOdd: { backgroundColor: '#ffffff' },

        timeTextColorEvenHover: { color: '#ffffff' },
        rowBackgroundColorEvenHover: { backgroundColor: '#ffffff' },
        timeTextColorOddHover: { color: '#ffffff' },
        rowBackgroundColorOddHover: { backgroundColor: '#ffffff' },

        timeTextColorEvenFocus: { color: '#ffffff' },
        rowBackgroundColorEvenFocus: { backgroundColor: '#ffffff' },
        timeTextColorOddFocus: { color: '#ffffff' },
        rowBackgroundColorOddFocus: { backgroundColor: '#ffffff' },

        timeTextColorEvenActive: { color: '#ffffff' },
        rowBackgroundColorEvenActive: { backgroundColor: '#ffffff' },
        timeTextColorOddActive: { color: '#ffffff' },
        rowBackgroundColorOddActive: { backgroundColor: '#ffffff' },

        slotBorderColor: { borderColor: '#ffffff' },
        slotDivideColor: { borderColor: '#ffffff' },
        slotBoxShadowColor: { boxShadow: '#ffffff' },
        slotHeaderBackgroundColor: { backgroundColor: '#ffffff' },
        dentalCheckTextColor: { color: '#ffffff' },
        dentalCheckBackgroundColor: { backgroundColor: '#ffffff' },
        insituteNameTextColor: { color: '#ffffff' },
        insituteAdressTextColor: { color: '#ffffff' },
        dayTextColor: { color: '#ffffff' },

        outOfStockSvg1FillColor: { fill: '#ffffff' },
        outOfStockSvg1StrokeColor: { stroke: '#ffffff' },
        outOfStockSvg2FillColor: { fill: '#ffffff' },
        outOfStockSvg2StrokeColor: { stroke: '#ffffff' },
        outOfStockTextColor: { color: '#ffffff' },

        lowStockSvg1FillColor: { fill: '#ffffff' },
        lowStockSvg1StrokeColor: { stroke: '#ffffff' },
        lowStockSvg2FillColor: { fill: '#ffffff' },
        lowStockSvg2StrokeColor: { stroke: '#ffffff' },
        lowStockTextColor: { color: '#ffffff' },

        inStockSvg1FillColor: { fill: '#ffffff' },
        inStockSvg1StrokeColor: { stroke: '#ffffff' },
        inStockSvg2FillColor: { fill: '#ffffff' },
        inStockSvg2StrokeColor: { stroke: '#ffffff' },
        inStockTextColor: { color: '#ffffff' },
    },
    prefixClass: {
        default: {
            slotBorderRadius: 'rounded-none',
            slotBorderWidth: 'border-0',
            slotBorderStyle: 'border-solid',
            slotMarginX: 'mx-0',
            slotBoxShadow: 'shadow-none',

            timeTextColorEven: 'text-[#ffffff]',
            rowBackgroundColorEven: 'bg-[#ffffff]',
            timeTextColorOdd: 'text-[#ffffff]',
            rowBackgroundColorOdd: 'bg-[#ffffff]',
        },
        sm: {
            slotBorderRadius: 'sm:rounded-none',
            slotBorderWidth: 'sm:border-0',
            slotBorderStyle: 'sm:border-solid',
            slotMarginX: 'sm:mx-0',
            slotBoxShadow: 'sm:shadow-none',
        },
        md: {
            slotBorderRadius: 'md:rounded-none',
            slotBorderWidth: 'md:border-0',
            slotBorderStyle: 'md:border-solid',
            slotMarginX: 'md:mx-0',
            slotBoxShadow: 'md:shadow-none',
        },
        lg: {
            slotBorderRadius: 'lg:rounded-none',
            slotBorderWidth: 'lg:border-0',
            slotBorderStyle: 'lg:border-solid',
            slotMarginX: 'lg:mx-0',
            slotBoxShadow: 'lg:shadow-none',
        },
        xl: {
            slotBorderRadius: 'xl:rounded-none',
            slotBorderWidth: 'xl:border-0',
            slotBorderStyle: 'xl:border-solid',
            slotMarginX: 'xl:mx-0',
            slotBoxShadow: 'xl:shadow-none',
        },
        '2xl': {
            slotBorderRadius: '2xl:rounded-none',
            slotBorderWidth: '2xl:border-0',
            slotBorderStyle: '2xl:border-solid',
            slotMarginX: '2xl:mx-0',
            slotBoxShadow: '2xl:shadow-none',
        },
        hover: {
            timeTextColorEven: 'hover:text-[#ffffff]',
            rowBackgroundColorEven: 'hover:bg-[#ffffff]',
            timeTextColorOdd: 'hover:text-[#ffffff]',
            rowBackgroundColorOdd: 'hover:bg-[#ffffff]',
        },
        focus: {
            timeTextColorEven: 'focus:text-[#ffffff]',
            rowBackgroundColorEven: 'focus:bg-[#ffffff]',
            timeTextColorOdd: 'focus:text-[#ffffff]',
            rowBackgroundColorOdd: 'focus:bg-[#ffffff]',
        },
        active: {
            timeTextColorEven: 'active:text-[#ffffff]',
            rowBackgroundColorEven: 'active:bg-[#ffffff]',
            timeTextColorOdd: 'active:text-[#ffffff]',
            rowBackgroundColorOdd: 'active:bg-[#ffffff]',
        },
    },
    blocks: {},
};

const itemSelection1Settings = {
    info: {
        totalAmountText: '',
        totalAmountDelimiter: '',
        unselectableIcon1Svg: '',
        unselectableIcon2Svg: '',
        selectableIcon1Svg: '',
        selectableIcon2Svg: '',
        selectedIcon1Svg: '',
        selectedIcon2Svg: '',
        SingleSelectionNotPossibleText: '',
        remainingLeftText: '',
        currencyUnitText: '',
    },

    // listed by shahjalal >start<
    classes: {
        itemDivideWidthY: 'divide-y-0',
        itemDivideStyle: 'divide-solid',
        itemBorderColor: 'border-[#ffffff]',
        itemDivideColor: 'divide-[#ffffff]',
        itemBoxShadowColor: 'shadow-[#ffffff]',
        itemWrapCustomClass: '',
        totalAmountExceptingTextSize: 'text-base',
        totalAmountExceptingFontWeight: 'font-normal',
        totalAmountTextSize: 'text-base',
        totalAmountFontWeight: 'font-normal',
        totalAmountTextCustomClass: '',
        totalAmountDelimiterCustomClass: '',
        totalAmountCustomClass: '',
        currencyCustomClass: '',
        totalAmountWrapCustomClass: '',
        itemRowCustomClass: '',
        itemOuterWrapCustomClass: '',
        unselectableIcon1Size: 'text-base',
        unselectableIcon1StrokeSize: 'stroke-[1px]',
        unselectableIcon1FillColor: 'fill-[#ffffffff]',
        unselectableIcon1StrokeColor: 'stroke-[#ffffffff]',
        unselectableIcon2Size: 'text-base',
        unselectableIcon2StrokeSize: 'stroke-[1px]',
        unselectableIcon2FillColor: 'fill-[#ffffffff]',
        unselectableIcon2StrokeColor: 'stroke-[#ffffffff]',
        unselectableIconCustomClass: '',
        selectableIcon1Size: 'text-base',
        selectableIcon1StrokeSize: 'stroke-[1px]',
        selectableIcon1FillColor: 'fill-[#ffffffff]',
        selectableIcon1StrokeColor: 'stroke-[#ffffffff]',
        selectableIcon2Size: 'text-base',
        selectableIcon2StrokeSize: 'stroke-[1px]',
        selectableIcon2FillColor: 'fill-[#ffffffff]',
        selectableIcon2StrokeColor: 'stroke-[#ffffffff]',
        selectableIconCustomClass: '',
        selectedIcon1Size: 'text-base',
        selectedIcon1StrokeSize: 'stroke-[1px]',
        selectedIcon1FillColor: 'fill-[#ffffffff]',
        selectedIcon1StrokeColor: 'stroke-[#ffffffff]',
        selectedIcon2Size: 'text-base',
        selectedIcon2StrokeSize: 'stroke-[1px]',
        selectedIcon2FillColor: 'fill-[#ffffffff]',
        selectedIcon2StrokeColor: 'stroke-[#ffffffff]',
        selectedCustomClass: '',
        selectAreaCustomClass: '',
        SingleSelectionNotPossibleTextSize: 'text-base',
        SingleSelectionNotPossibleFontWeight: 'font-normal',
        SingleSelectionNotPossibleTextColor: 'text-[#ffffffff]',
        SingleSelectionNotPossibleBackgroundColor: 'bg-[#ffffff]',
        SingleSelectionNotPossibleCustomClass: '',
        ItemNameTextSize: 'text-base',
        ItemNameFontWeight: 'font-normal',
        ItemNameCustomClass: '',
        ItemNameAreaWrapCustomClass: '',
        itemExplanationTextSize: 'text-base',
        itemExplanationFontWeight: 'font-normal',
        itemExplanationCustomClass: '',
        itemExplanationAreaWrapCustomClass: '',
        remainingLeftTextSize: 'text-base',
        remainingLeftFontWeight: 'font-normal',
        remainingLeftCustomClass: '',
        remainingNumberTextSize: 'text-base',
        remainingNumberFontWeight: 'font-normal',
        remainingNumberCustomClass: '',
        remainingAreaWrapCustomClass: '',
        currencyUnitTextSize: 'text-base',
        currencyUnitFontWeight: 'font-normal',
        currencyAreaCustomClass: '',
        currencyUnitCustomClass: '',
        errorMessageTextSize: 'text-base',
        errorMessageFontWeight: 'font-normal',
        errorMessageTextColor: 'text-[#ffffffff]',
        errorMessageBackgroundColor: 'bg-[#ffffff]',
        errorMessageCustomClass: '',
    },
    styles: {
        itemBorderColor: { borderColor: '#ffffff' },
        itemDivideColor: { borderColor: '#ffffff' },
        itemBoxShadowColor: { boxShadow: '#ffffff' },
        rowTextColorEven: { color: '#ffffff' },
        rowTextColorEvenHover: { color: '#ffffff' },
        rowTextColorEvenFocus: { color: '#ffffff' },
        rowTextColorEvenActive: { color: '#ffffff' },
        rowBackgroundColorEven: { backgroundColor: '#ffffffff' },
        rowBackgroundColorEvenHover: { backgroundColor: '#ffffffff' },
        rowBackgroundColorEvenFocus: { backgroundColor: '#ffffffff' },
        rowBackgroundColorEvenActive: { backgroundColor: '#ffffffff' },
        rowTextColorOdd: { color: '#ffffff' },
        rowTextColorOddHover: { color: '#ffffff' },
        rowTextColorOddFocus: { color: '#ffffff' },
        rowTextColorOddActive: { color: '#ffffff' },
        rowBackgroundColorOdd: { backgroundColor: '#ffffffff' },
        rowBackgroundColorOddHover: { backgroundColor: '#ffffffff' },
        rowBackgroundColorOddFocus: { backgroundColor: '#ffffffff' },
        rowBackgroundColorOddActive: { backgroundColor: '#ffffffff' },
        unselectableIcon1StrokeSize: { strokeWidth: '1px' },
        unselectableIcon1FillColor: { fill: '#ffffffff' },
        unselectableIcon1StrokeColor: { stroke: '#ffffffff' },
        unselectableIcon2StrokeSize: { strokeWidth: '1px' },
        unselectableIcon2FillColor: { fill: '#ffffffff' },
        unselectableIcon2StrokeColor: { stroke: '#ffffffff' },
        selectableIcon1StrokeSize: { strokeWidth: '1px' },
        selectableIcon1FillColor: { fill: '#ffffffff' },
        selectableIcon1StrokeColor: { stroke: '#ffffffff' },
        selectableIcon2StrokeSize: { strokeWidth: '1px' },
        selectableIcon2FillColor: { fill: '#ffffffff' },
        selectableIcon2StrokeColor: { stroke: '#ffffffff' },
        selectedIcon1StrokeSize: { strokeWidth: '1px' },
        selectedIcon1FillColor: { fill: '#ffffffff' },
        selectedIcon1StrokeColor: { stroke: '#ffffffff' },
        selectedIcon2StrokeSize: { strokeWidth: '1px' },
        selectedIcon2FillColor: { fill: '#ffffffff' },
        selectedIcon2StrokeColor: { stroke: '#ffffffff' },
        SingleSelectionNotPossibleTextColor: { color: '#ffffff' },
        SingleSelectionNotPossibleBackgroundColor: { backgroundColor: '#ffffffff' },
        errorMessageTextColor: { color: '#ffffff' },
        errorMessageBackgroundColor: { backgroundColor: '#ffffffff' },
    },
    prefixClass: {
        default: {
            itemBorderRadius: 'rounded-none',
            itemBorderWidth: 'border-0',
            itemBorderStyle: 'border-[#ffffffff]',
            itemMarginX: 'mx-0',
            itemBoxShadow: 'shadow-[#ffffffff]',

            rowTextColorEven: 'text-[#ffffffff]',
            rowTextColorOdd: 'text-[#ffffffff]',
            rowBackgroundColorEven: 'bg-[#ffffffff]',
            rowBackgroundColorOdd: 'bg-[#ffffffff]',
        },
        sm: {
            itemBorderRadius: 'sm:rounded-none',
            itemBorderWidth: 'sm:border-0',
            itemBorderStyle: 'sm:border-[#ffffffff]',
            itemMarginX: 'sm:mx-0',
            itemBoxShadow: 'sm:shadow-[#ffffffff]',
        },
        md: {
            itemBorderRadius: 'md:rounded-none',
            itemBorderWidth: 'md:border-0',
            itemBorderStyle: 'md:border-[#ffffffff]',
            itemMarginX: 'md:mx-0',
            itemBoxShadow: 'md:shadow-[#ffffffff]',
        },
        lg: {
            itemBorderRadius: 'lg:rounded-none',
            itemBorderWidth: 'lg:border-0',
            itemBorderStyle: 'lg:border-[#ffffffff]',
            itemMarginX: 'lg:mx-0',
            itemBoxShadow: 'lg:shadow-[#ffffffff]',
        },
        xl: {
            itemBorderRadius: 'xl:rounded-none',
            itemBorderWidth: 'xl:border-0',
            itemBorderStyle: 'xl:border-[#ffffffff]',
            itemMarginX: 'xl:mx-0',
            itemBoxShadow: 'xl:shadow-[#ffffffff]',
        },
        '2xl': {
            itemBorderRadius: '2xl:rounded-none',
            itemBorderWidth: '2xl:border-0',
            itemBorderStyle: '2xl:border-[#ffffffff]',
            itemMarginX: '2xl:mx-0',
            itemBoxShadow: '2xl:shadow-[#ffffffff]',
        },
        hover: {
            rowTextColorEven: 'hover:text-[#ffffff]',
            rowTextColorOdd: 'hover:text-[#ffffff]',
            rowBackgroundColorEven: 'hover:bg-[#ffffff]',
            rowBackgroundColorOdd: 'hover:bg-[#ffffff]',
        },
        focus: {
            rowTextColorEven: 'focus:text-[#ffffff]',
            rowTextColorOdd: 'focus:text-[#ffffff]',
            rowBackgroundColorEven: 'focus:bg-[#ffffff]',
            rowBackgroundColorOdd: 'focus:bg-[#ffffff]',
        },
        active: {
            rowTextColorEven: 'active:text-[#ffffff]',
            rowTextColorOdd: 'active:text-[#ffffff]',
            rowBackgroundColorEven: 'active:bg-[#ffffff]',
            rowBackgroundColorOdd: 'active:bg-[#ffffff]',
        },
    },
    // listed by shahjalal >end<
    blocks: {},
};

const token1loginSettings = {
    classes: {
        customClass: '',
        divisionTextSize: 'text-base',
        divisionTextWeight: 'font-normal',
        divisionTextColor: 'text-[#ffffff]',
        divisionTextCustomClass: '',
        divisionTextwrapCustomClass: '',
        inputBorderWidth: 'border-0',
        inputBorderStyle: 'border-solid',
        inputBorderRadius: 'rounded-none',
        labelTextSize: 'text-base',
        placeholderTextSize: 'placeholder:text-base',
        inputTextSize: 'text-base',
        labelTextWeight: 'font-normal',
        placeholderTextWeight: 'placeholder:font-normal',
        inputTextWeight: 'font-normal',
        labelTextColor: 'text-[#ffffff]',
        placeholderTextColor: 'placeholder:text-[#ffffff]',
        inputTextColor: 'text-[#ffffff]',
        borderColor: 'border-[#ffffff]',
        inputCustomClass: '',
        inputWrapCustomClass: '',
        inputCustumClass1: '',
        inputWrapCustumClass1: '',
        inputCustumClass2: '',
        inputWrapCustumClass2: '',
        inputCustumClass3: '',
        inputWrapCustumClass3: '',
        inputCustumClass4: '',
        inputWrapCustumClass4: '',
        outerWrapCustumClass: '',
        errorMessageTextColor: 'text-[#ffffff]',
        errorMessageTextSize: 'text-base',
        errorMessageTextWeight: 'font-normal',
        errorMessagecustomClass: '',
        errorMessageWrapCustomClass: '',
    },
    prefixClass: {},
    styles: {
        divisionTextColor: { color: '#ffffff' },
        labelTextColor: { color: '#ffffff' },
        placeholderTextColor: { color: '#ffffff' },
        inputTextColor: { color: '#ffffff' },
        borderColor: { borderColor: '#ffffff' },
        errorMessageTextColor: { color: '#ffffff' },
    },
    info: {
        divisionNumber: 3,
        buttonType: 'a',
        divisionText: '',
        isMask: false,
        inputLabelText1: '',
        inputPlaceholderText1: '',
        inputLabelText2: '',
        inputPlaceholderText2: '',
        inputLabelText3: '',
        inputPlaceholderText3: '',
        inputLabelText4: '',
        inputPlaceholderText4: '',
    },
    blocks: {},
};

const token2loginSettings = {
    classes: {
        labelTextSize: 'text-base',
        labelTextWeight: 'font-normal',
        labelTextColor: 'text-[#ffffffff]',
        labelBackgroundColor: 'bg-[#ffffffff]',
        labelCustomClass: '',
        requiredCharacters: '',
        requiredTextSize: 'text-base',
        requiredTextWeight: 'font-normal',
        requiredTextColor: 'text-[#ffffffff]',
        requiredBackgroundColor: 'bg-[#ffffffff]',
        requiredCustomClass: '',
        flexBasis1: '',
        flexBasis2: '',
        flexBasis3: '',
        flexBasis4: '',
        divisionTextSize: 'text-base',
        divisionTextWeight: 'font-normal',
        divisionTextColor: 'text-[#ffffffff]',
        divisionTextCustomClass: '',
        divisionTextwrapCustomClass: '',
        inputTextSize: 'text-base',
        inputTextWeight: 'font-normal',
        inputBorderWidth: 'border-0',
        inputBorderStyle: 'border-solid',
        inputBorderRadius: 'rounded-none',
        inputBorderColor: 'border-[#ffffffff]',
        placeholderTextSize: 'placeholder:text-base',
        placeholderTextWeight: 'placeholder:font-normal',
        inputTextColor: 'text-[#ffffffff]',
        placeholderTextColor: 'placeholder:text-[#ffffffff]',
        inputBackgroundColor: 'bg-[#ffffffff]',
        dayMonthTextSize: 'text-base',
        dayMonthTextWeight: 'font-normal',
        selectTextColor: 'text-[#ffffffff]',
        selectBackgroundColor: 'bg-[#ffffffff]',
        dayMonthTextColor: 'text-[#ffffffff]',
        dayMonthBackgroundColor: 'bg-[#ffffffff]',
        dayMonthcustomClass: '',
        inputErrorTextSize: 'text-base',
        inputErrorTextWeight: 'font-normal',
        inputErrorTextColor: 'text-[#ffffffff]',
        inputErrorBackgroundColor: 'bg-[#ffffffff]',
        inputErrorCustomClass: '',
        buttonErrorTextSize: 'text-base',
        buttonErrorTextWeight: 'font-normal',
        buttonErrorTextColor: 'text-[#ffffffff]',
        buttonErrorBackgroundColor: 'bg-[#ffffffff]',
        buttonErrorCustomClass: '',
        token1WrapCustumClass: '',
        token2WrapCustumClass: '',
        buttonWrapCustumClass: '',
    },
    info: {
        divisionNumber: 3,
        buttonType: 'a',
        divisionText: '',
        requiredCharacters: '',
        isMask: false,
    },
    styles: {
        labelTextColor: { color: '#ffffffff' },
        labelBackgroundColor: { backgroundColor: '#ffffffff' },
        requiredTextColor: { color: '#ffffffff' },
        requiredBackgroundColor: { backgroundColor: '#ffffffff' },
        divisionTextColor: { color: '#ffffffff' },
        inputBorderColor: { borderColor: '#ffffffff' },
        inputTextColor: { color: '#ffffffff' },
        placeholderTextColor: { color: '#ffffffff' },
        inputBackgroundColor: { backgroundColor: '#ffffffff' },
        selectTextColor: { color: '#ffffffff' },
        selectBackgroundColor: { backgroundColor: '#ffffffff' },
        dayMonthTextColor: { color: '#ffffffff' },
        dayMonthBackgroundColor: { backgroundColor: '#ffffffff' },
        inputErrorTextColor: { color: '#ffffffff' },
        inputErrorBackgroundColor: { backgroundColor: '#ffffffff' },
        buttonErrorTextColor: { color: '#ffffffff' },
        buttonErrorBackgroundColor: { backgroundColor: '#ffffffff' },
    },
    prefixClass: {},
    blocks: {},
};

const token2loginType1Settings = {
    classes: {
        labelTextSize: 'text-base',
        labelTextWeight: 'font-normal',
        labelTextColor: 'text-[#ffffffff]',
        labelBackgroundColor: 'bg-[#ffffffff]',
        labelCustomClass: '',

        requiredTextSize: 'text-base',
        requiredTextWeight: 'font-normal',
        requiredTextColor: 'text-[#ffffffff]',
        requiredBackgroundColor: 'bg-[#ffffffff]',
        requiredCustomClass: '',

        flexBasis1: '',
        flexBasis2: '',
        flexBasis3: '',
        flexBasis4: '',

        divisionTextSize: 'text-base',
        divisionTextWeight: 'font-normal',
        divisionTextColor: 'text-[#ffffffff]',
        divisionTextCustomClass: '',
        divisionTextwrapCustomClass: '',

        inputTextSize: 'text-base',
        inputTextWeight: 'font-normal',
        inputBorderWidth: 'border-0',
        inputBorderStyle: 'border-solid',
        inputBorderRadius: 'rounded-none',
        inputBorderColor: 'border-[#ffffffff]',
        inputTextColor: 'text-[#ffffffff]',
        inputBackgroundColor: 'bg-[#ffffffff]',
        inputCustomClass: '',

        placeholderTextSize: 'placeholder:text-base',
        placeholderTextWeight: 'placeholder:font-normal',
        placeholderTextColor: 'placeholder:text-[#ffffffff]',

        dayMonthTextSize: 'text-base',
        dayMonthTextWeight: 'font-normal',
        dayMonthTextColor: 'text-[#ffffffff]',
        dayMonthBackgroundColor: 'bg-[#ffffffff]',
        dayMonthcustomClass: '',

        selectTextColor: 'text-[#ffffffff]',
        selectBackgroundColor: 'bg-[#ffffffff]',

        inputErrorTextSize: 'text-base',
        inputErrorTextWeight: 'font-normal',
        inputErrorTextColor: 'text-[#ffffffff]',
        inputErrorBackgroundColor: 'bg-[#ffffffff]',
        inputErrorCustomClass: '',

        buttonErrorTextSize: 'text-base',
        buttonErrorTextWeight: 'font-normal',
        buttonErrorTextColor: 'text-[#ffffffff]',
        buttonErrorBackgroundColor: 'bg-[#ffffffff]',
        buttonErrorCustomClass: '',

        idWrapCustomClass: '',
        birthdayWrapCustomClass: '',
        buttonWrapCustomClass: '',
    },
    info: {
        requiredCharacters: '',
        divisionNumber: 3,
        divisionText: '',
        isMask: false,
        buttonType: 'a',
    },
    styles: {
        labelTextColor: { color: '#ffffffff' },
        labelBackgroundColor: { backgroundColor: '#ffffffff' },
        requiredTextColor: { color: '#ffffffff' },
        requiredBackgroundColor: { backgroundColor: '#ffffffff' },
        divisionTextColor: { color: '#ffffffff' },
        inputBorderColor: { borderColor: '#ffffffff' },
        inputTextColor: { color: '#ffffffff' },
        placeholderTextColor: { color: '#ffffffff' },
        inputBackgroundColor: { backgroundColor: '#ffffffff' },
        selectTextColor: { color: '#ffffffff' },
        selectBackgroundColor: { backgroundColor: '#ffffffff' },
        dayMonthTextColor: { color: '#ffffffff' },
        dayMonthBackgroundColor: { backgroundColor: '#ffffffff' },
        inputErrorTextColor: { color: '#ffffffff' },
        inputErrorBackgroundColor: { backgroundColor: '#ffffffff' },
        buttonErrorTextColor: { color: '#ffffffff' },
        buttonErrorBackgroundColor: { backgroundColor: '#ffffffff' },
    },
    prefixClass: {},
    blocks: {},
};
const token2loginType2Settings = {
    classes: {
        labelTextSize: 'text-base',
        labelTextWeight: 'font-normal',
        labelTextColor: 'text-[#ffffffff]',
        labelBackgroundColor: 'bg-[#ffffffff]',
        labelCustomClass: '',

        requiredTextSize: 'text-base',
        requiredTextWeight: 'font-normal',
        requiredTextColor: 'text-[#ffffffff]',
        requiredBackgroundColor: 'bg-[#ffffffff]',
        requiredCustomClass: '',

        flexBasis1: '',
        flexBasis2: '',
        flexBasis3: '',
        flexBasis4: '',

        divisionTextSize: 'text-base',
        divisionTextWeight: 'font-normal',
        divisionTextColor: 'text-[#ffffffff]',
        divisionTextCustomClass: '',
        divisionTextwrapCustomClass: '',

        inputTextSize: 'text-base',
        inputTextWeight: 'font-normal',
        inputBorderWidth: 'border-0',
        inputBorderStyle: 'border-solid',
        inputBorderRadius: 'rounded-none',
        inputBorderColor: 'border-[#ffffffff]',
        inputTextColor: 'text-[#ffffffff]',
        inputBackgroundColor: 'bg-[#ffffffff]',
        inputCustomClass: '',

        placeholderTextSize: 'placeholder:text-base',
        placeholderTextWeight: 'placeholder:font-normal',
        placeholderTextColor: 'placeholder:text-[#ffffffff]',

        idInputCustomClass: '',
        passwordInputCustomClass: '',

        inputErrorTextSize: 'text-base',
        inputErrorTextWeight: 'font-normal',
        inputErrorTextColor: 'text-[#ffffffff]',
        inputErrorBackgroundColor: 'bg-[#ffffffff]',
        inputErrorCustomClass: '',

        buttonErrorTextSize: 'text-base',
        buttonErrorTextWeight: 'font-normal',
        buttonErrorTextColor: 'text-[#ffffffff]',
        buttonErrorBackgroundColor: 'bg-[#ffffffff]',
        buttonErrorCustomClass: '',

        idWrapCustomClass: '',
        birthdayWrapCustomClass: '',
        buttonWrapCustomClass: '',
    },
    info: {
        requiredCharacters: '',
        divisionNumber: 3,
        divisionText: '',
        isMaskId: false,
        isMaskPssword: false,
        buttonType: 'a',
    },
    styles: {
        labelTextColor: { color: '#ffffffff' },
        labelBackgroundColor: { backgroundColor: '#ffffffff' },
        requiredTextColor: { color: '#ffffffff' },
        requiredBackgroundColor: { backgroundColor: '#ffffffff' },
        divisionTextColor: { color: '#ffffffff' },
        inputBorderColor: { borderColor: '#ffffffff' },
        inputTextColor: { color: '#ffffffff' },
        placeholderTextColor: { color: '#ffffffff' },
        inputBackgroundColor: { backgroundColor: '#ffffffff' },
        inputErrorTextColor: { color: '#ffffffff' },
        inputErrorBackgroundColor: { backgroundColor: '#ffffffff' },
        buttonErrorTextColor: { color: '#ffffffff' },
        buttonErrorBackgroundColor: { backgroundColor: '#ffffffff' },
    },
    prefixClass: {},
    blocks: {},
};

const token3loginSettings = {
    classes: {
        customClass: '',
        divisionTextSize: 'text-base',
        divisionTextWeight: 'font-normal',
        divisionTextColor: 'text-[#ffffff]',
        divisionTextCustomClass: '',
        divisionTextwrapCustomClass: '',
        inputBorderWidth: 'border-0',
        inputBorderStyle: 'border-solid',
        inputBorderRadius: 'rounded-none',
        labelTextSize: 'text-base',
        placeholderTextSize: 'placeholder:text-base',
        inputTextSize: 'text-base',
        labelTextWeight: 'font-normal',
        placeholderTextWeight: 'placeholder:font-normal',
        inputTextWeight: 'font-normal',
        labelTextColor: 'text-[#ffffff]',
        placeholderTextColor: 'placeholder:text-[#ffffff]',
        inputTextColor: 'text-[#ffffff]',
        borderColor: 'border-[#ffffff]',
        inputCustomClass: '',
        t1inputWrapCustomClass: '',
        t2inputWrapCustomClass: '',
        t1inputCustumClass1: '',
        t1inputWrapCustumClass1: '',
        t1inputCustumClass2: '',
        t1inputWrapCustumClass2: '',
        t1inputCustumClass3: '',
        t1inputWrapCustumClass3: '',
        t1inputCustumClass4: '',
        t1inputWrapCustumClass4: '',
        t2inputCustumClass1: '',
        t2inputWrapCustumClass1: '',
        t2inputCustumClass2: '',
        t2inputWrapCustumClass2: '',
        t2inputCustumClass3: '',
        t2inputWrapCustumClass3: '',
        t3inputCustumClass: '',
        t3inputWrapCustumClass: '',
        outerWrapCustumClass: '',
        errorMessageTextColor: 'text-[#ffffff]',
        errorMessageTextSize: 'text-base',
        errorMessageTextWeight: 'font-normal',
        errorMessagecustomClass: '',
        errorMessageWrapCustomClass: '',
    },
    info: {
        divisionNumber: 3,
        buttonType: 'a',
        divisionText: '',
        t1inputLabelText1: '',
        t1inputPlaceholderText1: '',
        t1inputLabelText2: '',
        t1inputPlaceholderText2: '',
        t1inputLabelText3: '',
        t1inputPlaceholderText3: '',
        t1inputLabelText4: '',
        t1inputPlaceholderText4: '',
        t2inputLabelText1: '',
        t2inputLabelText2: '',
        t2inputLabelText3: '',
        t3inputLabelText: '',
        isMask: false,
    },
    styles: {
        divisionTextColor: { color: '#ffffff' },
        labelTextColor: { color: '#ffffff' },
        placeholderTextColor: { color: '#ffffff' },
        inputTextColor: { color: '#ffffff' },
        borderColor: { borderColor: '#ffffff' },
        errorMessageTextColor: { color: '#ffffff' },
    },
    prefixClass: {},
    blocks: {},
};

const zipSearchSettings = {
    classes: {
        labelTextSize: 'text-base',
        labelFontWeight: 'font-normal',
        labelTextColor: 'text-[#ffffff]',
        labelTextBackgroundColor: 'bg-[#ffffff]',
        labelCustomClass: '',
        requiredTextSize: 'text-base',
        requiredFontWeight: 'font-normal',
        requiredTextColor: 'text-[#ffffff]',
        requiredBackgroundColor: 'bg-[#ffffff]',
        requiredCustomClass: '',

        divisionTextSize: 'text-base',
        divisionTextWeight: 'font-normal',
        divisionTextColor: 'text-[#ffffff]',
        divisionTextCustomClass: '',
        divisionTextwrapCustomClass: '',
        valueTextSize: 'text-base',
        valueFontWeight: 'font-normal',
        valueTextColor: 'text-[#ffffff]',
        placeholderTextColor: 'placeholder:text-[#ffffff]',
        borderColor: 'border-[#ffffff]',
        inputCustomClass: '',
        errorMessageTextSize: 'text-base',
        errorMessageFontWeight: 'font-normal',
        errorMessageTextColor: 'text-[#ffffff]',
        errorMessageBackgroundColor: 'bg-[#ffffff]',
        errorMessageCustomClass: '',
        inputWrapCustomClass: '',
        inputBorderWidth: 'border-0',
        inputBorderStyle: 'border-solid',
        inputBorderRadius: 'rounded-none',
        inputBackgroundColor: 'bg-[#ffffff]',
    },
    styles: {
        labelTextColor: { color: '#ffffff' },
        labelTextBackgroundColor: { backgroundColor: '#ffffff' },
        requiredTextColor: { color: '#ffffff' },
        requiredBackgroundColor: { backgroundColor: '#ffffff' },

        divisionTextColor: { color: '#ffffff' },
        valueTextColor: { color: '#ffffff' },
        placeholderTextColor: { color: '#ffffff' },
        borderColor: { borderColor: '#ffffff' },
        errorMessageTextColor: { color: '#ffffff' },
        errorMessageBackgroundColor: { backgroundColor: '#ffffff' },
        inputBackgroundColor: { backgroundColor: '#ffffff' },
    },
    info: {
        requiredCharacters: '',
        divisionText: '',
    },
    prefixClass: {},
    blocks: {},
};

const debugModeSettings = {
    info: {
        useDebug: false,
        token: '',
        url: '',
        memo: '',
    },
    prefixClass: {},
    styles: {},
    classes: {},
    blocks: {},
};

const inputBirthdaySettings = {
    info: {
        requiredCharacters: '',
    },
    prefixClass: {},
    styles: {
        labelTextColor: { color: '#ffffffff' },
        labelBackgroundColor: { backgroundColor: '#ffffffff' },
        requiredTextColor: { color: '#ffffffff' },
        requiredBackgroundColor: { backgroundColor: '#ffffffff' },
        selectTextColor: { color: '#ffffffff' },
        selectBackgroundColor: { backgroundColor: '#ffffffff' },
        selectBorderColor: { borderColor: '#ffffffff' },
        dayMonthTextColor: { color: '#ffffffff' },
        dayMonthBackgroundColor: { backgroundColor: '#ffffffff' },
        inputErrorTextColor: { color: '#ffffffff' },
        inputErrorBackgroundColor: { backgroundColor: '#ffffffff' },
    },
    classes: {
        labelTextSize: 'text-base',
        labelTextWeight: 'font-normal',
        labelTextColor: 'text-[#ffffffff]',
        labelBackgroundColor: 'bg-[#ffffffff]',
        labelCustomClass: '',
        requiredTextSize: 'text-base',
        requiredTextWeight: 'font-normal',
        requiredTextColor: 'text-[#ffffffff]',
        requiredBackgroundColor: 'bg-[#ffffffff]',
        requiredCustomClass: '',
        selectTextSize: 'text-base',
        selectTextWeight: 'font-normal',
        selectBorderWidth: '',
        selectBorderStyle: '',
        selectBorderRadius: '',
        selectTextColor: 'text-[#ffffffff]',
        selectBackgroundColor: 'bg-[#ffffffff]',
        selectBorderColor: 'border-[#ffffffff]',
        dayMonthTextSize: 'text-base',
        dayMonthTextWeight: 'font-normal',
        dayMonthTextColor: 'text-[#ffffffff]',
        dayMonthBackgroundColor: 'bg-[#ffffffff]',
        dayMonthcustomClass: '',
        inputErrorTextSize: 'text-base',
        inputErrorTextWeight: 'font-normal',
        inputErrorTextColor: 'text-[#ffffffff]',
        inputErrorBackgroundColor: 'bg-[#ffffffff]',
        inputErrorCustomClass: '',
        yearWrapCustomClass: '',
        monthWrapCustomClass: '',
        dayWrapCustomClass: '',
        birthdayWrapCustomClass: '',
    },
    blocks: {},
};

export const defaultBlockSettings = {
    // BUTTON: {
    //     buttonQuantity: 1,
    //     buttonType: 'a',
    //     blockWrapCustomClass: '',
    //     button1Text: '',
    //     button1Filter: '',
    //     button1DisabledText: '',
    //     button1Function: 'onClick',
    //     button1Destination: '',
    //     button1HasModal: 2,
    //     button1HasPressingFilter: 2,
    //     button1HasSpinner: 3,
    //     button1SpinnerSvg: '',

    //     button1ModalButtonStructure: 3,
    //     button1ModalButtonType: 'a',
    //     button1ModalTrueText: '',
    //     button1ModalFalseText: '',
    //     button1ModalHeight: 'h-auto',
    //     button1ModalHeightSm: 'sm:h-auto',
    //     button1ModalHeightMd: 'md:h-auto',
    //     button1ModalHeightLg: 'lg:h-auto',
    //     button1ModalHeightXl: 'xl:h-auto',
    //     button1ModalHeight2xl: '2xl:h-auto',
    //     button1ModalWidth: 'w-auto',
    //     button1ModalWidthSm: 'sm:w-auto',
    //     button1ModalWidthMd: 'md:w-auto',
    //     button1ModalWidthLg: 'lg:w-auto',
    //     button1ModalWidthXl: 'xl:w-auto',
    //     button1ModalWidth2xl: '2xl:w-auto',
    //     button1ModalBorderWidth: 'border-0',
    //     button1ModalBorderStyle: 'border-solid',
    //     button1ModalBorderRadius: 'rounded-none',
    //     button1ModalBoxShadow: 'drop-shadow-none',
    //     button1ModalErrorTextSize: 'text-base',
    //     button1ModalErrorTextWeight: 'font-normal',
    //     button1ModalErrorCustomClass: '',
    //     button1ModalBorderColor: 'border-[#ffffff]',
    //     button1ModalBackgroundColor: 'bg-[#ffffff]',
    //     button1ModalBoxShadowColor: 'shadow-[#ffffff]',
    //     button1ModalTextColor: 'text-[#ffffff]',

    //     button1ValidateFilters: [],
    //     button1blocks: [
    //         {
    //             informationAreaType: 1,
    //             informationAreaCustomClass: '',
    //             informationAreaTitle: '',
    //             informationAreaContents: '',
    //             memo: '',
    //             blocks: [],
    //             belowBlockText: '',
    //             appPageBlockId: uuid(),
    //             appPageBlockOrderNo: 0,
    //             blockListCaption: '[情報エリアブロック]',
    //             blockPageTitle: '情報エリアブロック',
    //             blockPageId: 1,
    //             key: 'INFORMATION_AREA',
    //         },
    //     ],
    //     button1FieldModify: 2,
    //     button1FieldModifySetting: [],
    //     button1ModalBlockWrapCustomClass: '',
    //     button1ModalButtonWrapCustomClass: '',
    //     button1ModalModalWrapCustomClass: '',

    //     button2Text: '',
    //     button2Filter: '',
    //     button2DisabledText: '',
    //     button2Function: 'onClick',
    //     button2Destination: '',
    //     button2HasModal: 2,
    //     button2HasPressingFilter: 2,
    //     button2HasSpinner: 3,
    //     button2SpinnerSvg: '',

    //     button2ModalButtonStructure: 3,
    //     button2ModalButtonType: 'a',
    //     button2ModalTrueText: '',
    //     button2ModalFalseText: '',
    //     button2ModalHeight: 'h-auto',
    //     button2ModalHeightSm: 'sm:h-auto',
    //     button2ModalHeightMd: 'md:h-auto',
    //     button2ModalHeightLg: 'lg:h-auto',
    //     button2ModalHeightXl: 'xl:h-auto',
    //     button2ModalHeight2xl: '2xl:h-auto',
    //     button2ModalWidth: 'w-auto',
    //     button2ModalWidthSm: 'sm:w-auto',
    //     button2ModalWidthMd: 'md:w-auto',
    //     button2ModalWidthLg: 'lg:w-auto',
    //     button2ModalWidthXl: 'xl:w-auto',
    //     button2ModalWidth2xl: '2xl:w-auto',
    //     button2ModalBorderWidth: 'border-0',
    //     button2ModalBorderStyle: 'border-solid',
    //     button2ModalBorderRadius: 'rounded-none',
    //     button2ModalBoxShadow: 'drop-shadow-none',
    //     button2ModalErrorTextSize: 'text-base',
    //     button2ModalErrorTextWeight: 'font-normal',
    //     button2ModalErrorCustomClass: '',
    //     button2ModalBorderColor: 'border-[#ffffff]',
    //     button2ModalBackgroundColor: 'bg-[#ffffff]',
    //     button2ModalBoxShadowColor: 'shadow-[#ffffff]',
    //     button2ModalTextColor: 'text-[#ffffff]',
    //     button2ValidateFilters: [],
    //     button2blocks: [],
    //     button2FieldModify: 2,
    //     button2FieldModifySetting: [],
    //     button2ModalBlockWrapCustomClass: '',
    //     button2ModalButtonWrapCustomClass: '',
    //     button2ModalModalWrapCustomClass: '',
    //     button1CustomClass: '',
    //     button2CustomClass: '',

    //     memo: '',
    // },
    BUTTON: {
        buttonQuantity: 1,
        buttonType: 'a',
        blockWrapCustomClass: '',
        button1Text: '',
        button1Filter: '',
        button1DisabledText: '',
        button1FilterResTargetField: '',
        button1Function: 'onClick',
        button1Reservation: {
            successDestination: '',
            successTargetField: '',
            networkErrorDestination: '',
            networkErrorTargetField: '',
            networkErrorModalClose: 2,
            networkErrorButtonDisable: 2,
            networkErrorText: '',
            error1Destination: '',
            error1TargetField: '',
            error1ModalClose: 2,
            error1ButtonDisable: 2,
            error1Text: '',
            error1Code: 201,
            error2Destination: '',
            error2TargetField: '',
            error2ModalClose: 2,
            error2ButtonDisable: 2,
            error2Text: '',
            error2Code: 202,
            error3Destination: '',
            error3TargetField: '',
            error3ModalClose: 2,
            error3ButtonDisable: 2,
            error3Text: '',
            error3Code: 203,
        },
        button1ReservationCancel: {
            successDestination: '',
            successTargetField: '',
            networkErrorDestination: '',
            networkErrorTargetField: '',
            networkErrorModalClose: 2,
            networkErrorButtonDisable: 2,
            networkErrorText: '',
            error1Destination: '',
            error1TargetField: '',
            error1ModalClose: 2,
            error1ButtonDisable: 2,
            error1Text: '',
            error1Code: 301,
            error2Destination: '',
            error2TargetField: '',
            error2ModalClose: 2,
            error2ButtonDisable: 2,
            error2Text: '',
            error2Code: 302,
            error3Destination: '',
            error3TargetField: '',
            error3ModalClose: 2,
            error3ButtonDisable: 2,
            error3Text: '',
            error3Code: 303,
        },
        button1ReservationChange: {
            successDestination: '',
            successTargetField: '',
            networkErrorDestination: '',
            networkErrorTargetField: '',
            networkErrorModalClose: 2,
            networkErrorButtonDisable: 2,
            networkErrorText: '',
            error1Destination: '',
            error1TargetField: '',
            error1ModalClose: 2,
            error1ButtonDisable: 2,
            error1Text: '',
            error1Code: 401,
            error2Destination: '',
            error2TargetField: '',
            error2ModalClose: 2,
            error2ButtonDisable: 2,
            error2Text: '',
            error2Code: 402,
            error3Destination: '',
            error3TargetField: '',
            error3ModalClose: 2,
            error3ButtonDisable: 2,
            error3Text: '',
            error3Code: 403,
        },
        button1SendField: {
            successDestination: '',
            successTargetField: '',
            networkErrorDestination: '',
            networkErrorTargetField: '',
            networkErrorModalClose: 2,
            networkErrorButtonDisable: 2,
            networkErrorText: '',
            error1Destination: '',
            error1TargetField: '',
            error1ModalClose: 2,
            error1ButtonDisable: 2,
            error1Text: '',
            error1Code: 501,
            error2Destination: '',
            error2TargetField: '',
            error2ModalClose: 2,
            error2ButtonDisable: 2,
            error2Text: '',
            error2Code: 502,
            error3Destination: '',
            error3TargetField: '',
            error3ModalClose: 2,
            error3ButtonDisable: 2,
            error3Text: '',
            error3Code: 503,
            sendTargetField: []
        },
        button1Destination: '',
        button1HasModal: 2,
        button1HasPressingFilter: 2,
        button1HasSpinner: 2,

        //spinner
        button2SpinnerSvg: '',
        button1SpinnerSize: 'text-base',
        button1SpinnerStrokeSize: 'stroke-[1px]',
        button1SpinnerFillColor: 'fill-[#ffffffff]',
        button1SpinnerStrokeColor: 'stroke-[#ffffffff]',
        button1SpinnerCustomClass: '',


        button1ModalButtonStructure: 3,
        button1ModalButtonType: 'a',
        button1ModalTrueText: '',
        button1ModalFalseText: '',
        button1ModalHeight: 'h-auto',
        button1ModalHeightSm: 'sm:h-auto',
        button1ModalHeightMd: 'md:h-auto',
        button1ModalHeightLg: 'lg:h-auto',
        button1ModalHeightXl: 'xl:h-auto',
        button1ModalHeight2xl: '2xl:h-auto',
        button1ModalWidth: 'w-auto',
        button1ModalWidthSm: 'sm:w-auto',
        button1ModalWidthMd: 'md:w-auto',
        button1ModalWidthLg: 'lg:w-auto',
        button1ModalWidthXl: 'xl:w-auto',
        button1ModalWidth2xl: '2xl:w-auto',
        button1ModalBorderWidth: 'border-0',
        button1ModalBorderStyle: 'border-solid',
        button1ModalBorderRadius: 'rounded-none',
        button1ModalBoxShadow: 'drop-shadow-none',
        button1ModalErrorTextSize: 'text-base',
        button1ModalErrorTextWeight: 'font-normal',
        button1ModalErrorCustomClass: '',
        button1ModalBorderColor: 'border-[#ffffff]',
        button1ModalBackgroundColor: 'bg-[#ffffff]',
        button1ModalBoxShadowColor: 'shadow-[#ffffff]',
        button1ModalTextColor: 'text-[#ffffff]',
        button1ValidateFilters: [],
        button1blocks: [
            {
                informationAreaType: 1,
                informationAreaCustomClass: "",
                informationAreaTitle: "",
                informationAreaContnts: "",
                memo: "",
                blocks: [],
                belowBlockText: "",
                appPageBlockId: uuid(),
                appPageBlockOrderNo: 0,
                blockListCaption: "[情報エリアブロック]",
                blockPageTitle: "情報エリアブロック",
                blockPageId: 1,
                key: "INFORMATION_AREA",
            },
        ],
        button1FieldModify: 2,
        button1FieldModifySetting: [],
        button1ModalBlockWrapCustomClass: '',
        button1ModalButtonWrapCustomClass: '',
        button1ModalModalWrapCustomClass: '',


        button2Text: '',
        button2Filter: '',
        button2DisabledText: '',
        button2FilterResTargetField: '',
        button2Function: 'onClick',
        button2Reservation: {
            successDestination: '',
            successTargetField: '',
            networkErrorDestination: '',
            networkErrorTargetField: '',
            networkErrorModalClose: 2,
            networkErrorButtonDisable: 2,
            networkErrorText: '',
            error1Destination: '',
            error1TargetField: '',
            error1ModalClose: 2,
            error1ButtonDisable: 2,
            error1Text: '',
            error1Code: 201,
            error2Destination: '',
            error2TargetField: '',
            error2ModalClose: 2,
            error2ButtonDisable: 2,
            error2Text: '',
            error2Code: 202,
            error3Destination: '',
            error3TargetField: '',
            error3ModalClose: 2,
            error3ButtonDisable: 2,
            error3Text: '',
            error3Code: 203,
        },
        button2ReservationCancel: {
            successDestination: '',
            successTargetField: '',
            networkErrorDestination: '',
            networkErrorTargetField: '',
            networkErrorModalClose: 2,
            networkErrorButtonDisable: 2,
            networkErrorText: '',
            error1Destination: '',
            error1TargetField: '',
            error1ModalClose: 2,
            error1ButtonDisable: 2,
            error1Text: '',
            error1Code: 301,
            error2Destination: '',
            error2TargetField: '',
            error2ModalClose: 2,
            error2ButtonDisable: 2,
            error2Text: '',
            error2Code: 302,
            error3Destination: '',
            error3TargetField: '',
            error3ModalClose: 2,
            error3ButtonDisable: 2,
            error3Text: '',
            error3Code: 303,
        },
        button2ReservationChange: {
            successDestination: '',
            successTargetField: '',
            networkErrorDestination: '',
            networkErrorTargetField: '',
            networkErrorModalClose: 2,
            networkErrorButtonDisable: 2,
            networkErrorText: '',
            error1Destination: '',
            error1TargetField: '',
            error1ModalClose: 2,
            error1ButtonDisable: 2,
            error1Text: '',
            error1Code: 401,
            error2Destination: '',
            error2TargetField: '',
            error2ModalClose: 2,
            error2ButtonDisable: 2,
            error2Text: '',
            error2Code: 402,
            error3Destination: '',
            error3TargetField: '',
            error3ModalClose: 2,
            error3ButtonDisable: 2,
            error3Text: '',
            error3Code: 403,
        },
        button2SendField: {
            successDestination: '',
            successTargetField: '',
            networkErrorDestination: '',
            networkErrorTargetField: '',
            networkErrorModalClose: 2,
            networkErrorButtonDisable: 2,
            networkErrorText: '',
            error1Destination: '',
            error1TargetField: '',
            error1ModalClose: 2,
            error1ButtonDisable: 2,
            error1Text: '',
            error1Code: 501,
            error2Destination: '',
            error2TargetField: '',
            error2ModalClose: 2,
            error2ButtonDisable: 2,
            error2Text: '',
            error2Code: 502,
            error3Destination: '',
            error3TargetField: '',
            error3ModalClose: 2,
            error3ButtonDisable: 2,
            error3Text: '',
            error3Code: 503,
            sendTargetField: []
        },
        button2Destination: '',
        button2HasModal: 2,
        button2HasPressingFilter: 2,
        button2HasSpinner: 2,
        button2SpinnerSvg: '',
        button2SpinnerSize: 'text-base',
        button2SpinnerStrokeSize: 'stroke-[1px]',
        button2SpinnerFillColor: 'fill-[#ffffffff]',
        button2SpinnerStrokeColor: 'stroke-[#ffffffff]',
        button2SpinnerCustomClass: '',

        button2ModalButtonStructure: 3,
        button2ModalButtonType: 'a',
        button2ModalTrueText: '',
        button2ModalFalseText: '',
        button2ModalHight: 'h-auto',
        button2ModalHeightSm: 'sm:h-auto',
        button2ModalHeightMd: 'md:h-auto',
        button2ModalHeightLg: 'lg:h-auto',
        button2ModalHeightXl: 'xl:h-auto',
        button2ModalHeight2xl: '2xl:h-auto',
        button2ModalWidth: 'w-auto',
        button2ModalWidthSm: 'sm:w-auto',
        button2ModalWidthMd: 'md:w-auto',
        button2ModalWidthLg: 'lg:w-auto',
        button2ModalWidthXl: 'xl:w-auto',
        button2ModalWidth2xl: '2xl:w-auto',
        button2ModalBorderWidth: 'border-0',
        button2ModalBorderStyle: 'border-solid',
        button2ModalBorderRadius: 'rounded-none',
        button2ModalBoxShadow: 'drop-shadow-none',
        button2ModalErrorTextSize: 'text-base',
        button2ModalErrorTextWeight: 'font-normal',
        button2ModalErrorCustomClass: '',
        button2ModalBorderColor: 'border-[#ffffff]',
        button2ModalBackgroundColor: 'bg-[#ffffff]',
        button2ModalBoxShadowColor: 'shadow-[#ffffff]',
        button2ModalTextColor: 'text-[#ffffff]',

        button2blocks: [],
        button2ValidateFilters: [],
        button2ModalBlockWrapCustomClass: '',
        button2ModalButtonWrapCustomClass: '',
        button2ModalModalWrapCustomClass: '',
        button1CustomClass: '',
        button2CustomClass: '',
        itemSelectionOnThisPage: {},
        button1WaitingForItemCheck: 2,
        button2WaitingForItemCheck: 2,
        button2FieldModify: 2,
        button2FieldModifySetting: [],
        memo: '',
    },
    INFORMATION_AREA: {
        informationAreaType: 1,
        informationAreaCustomClass: '',
        informationAreaTitle: '',
        informationAreaContnts: '',
        memo: '',
        blocks: [],
        belowBlockText: '',
        belowBlockTextCustomClass: '',
    },
    TERMSS_OF_SERVICE: {
        scrollType: 1,
        buttonType: 'a',
        agreeCheckboxText: '',
        buttonText: '',
        agreeAreaCustomClass: '',
        textAreaCustomClass: '',
        checkboxAreaCustomClass: '',
        buttonAreaCustomClass: '',
        termsOfService: '',
        checkFalseText: '',
        checkFalseTextAreaCustomClass: '',
        notScrolling2BottomText: '',
        notScrollingTextAreaCustomClass: '',
        checkboxDisabletextCustomClass: '',
        checkboxEnabletextCustomClass: '',
        record2field: 1,
        fieldCode: '',
        memo: '',
    },
    TERMS_OF_SERVICE: {
        scrollType: 1,
        buttonType: 'a',
        agreeCheckboxText: '',
        buttonText: '',
        agreeAreaCustomClass: '',
        textAreaCustomClass: '',
        checkboxAreaCustomClass: '',
        buttonAreaCustomClass: '',
        termsOfService: '',
        checkFalseText: '',
        checkFalseTextAreaCustomClass: '',
        notScrolling2BottomText: '',
        notScrollingTextAreaCustomClass: '',
        checkboxDisabletextCustomClass: '',
        checkboxEnabletextCustomClass: '',
        record2field: 1,
        fieldCode: '',
        memo: '',
    },
    IMAGE: {
        imageQuantity: 1,
        imageUrl1: '',
        imageUrl2: '',
        imgAreaCustomClass: '',
        imgWrapCustomClass: '',
        imgCustomClass: '',
        memo: '',
    },
    TEXT_LINK: {
        linkType: 'url_self',
        linkDestination: '',
        linkText: '',
        textLinkAreaWrapCustomClass: '',
        linkCustomClass: '',
        memo: '',
    },
    H1: {
        headingText: '',
        headingWrapCustomClass: '',
        memo: '',
    },
    H2: {
        headingText: '',
        headingWrapCustomClass: '',
        memo: '',
    },
    H3: {
        headingText: '',
        headingWrapCustomClass: '',
        memo: '',
    },
    H4: {
        headingText: '',
        headingWrapCustomClass: '',
        memo: '',
    },
    H5: {
        headingText: '',
        headingWrapCustomClass: '',
        memo: '',
    },
    H6: {
        headingText: '',
        headingWrapCustomClass: '',
        memo: '',
    },
    MAP: {
        nameInitialValue: '',
        nameField: '',
        addressInitialValue: '',
        addressField: '',
        mapAreaWrapCustomClass: '',
        iframeCustomClass: '',
        memo: '',
    },
    HORIZONTAL_LINE: {
        hrCustomClass: '',
        hrWrapCustomClass: '',
        memo: '',
    },
    LOGIN_BUTTON: {
        buttonText: '',
        successDestination: '',
        failureDestination: '',
        buttonType: 'a',
        loginAreaCustomClass: '',
        memo: '',
    },
    ONE_BUTTON_LOGIN: {
        buttonText: '',
        successDestination: '',
        failureDestination: '',
        buttonType: 'a',
        loginAreaCustomClass: '',
        buttonSpinnerSvg: '',
        buttonSpinnerSize: 'text-base',
        buttonSpinnerStrokeSize: 'stroke-[1px]',
        buttonSpinnerFillColor: 'fill-[#ffffffff]',
        buttonSpinnerStrokeColor: 'stroke-[#ffffffff]',
        buttonSpinnerCustomClass: '',
        memo: '',
    },
    ONE_TOKEN_LOGIN_BLOCK: {
        buttonText: '',
        successDestination: '',
        failureMessage: '',
        buttonType: 'a',
        loginAreaCustomClass: '',
        formErrorMessage: '',
        memo: '',
        divisionNumber: 3,
        area1TextLength: 0,
        area1InputType: 0,
        area1DropdownStartNumber: '',
        area1DropdownEndNumber: '',
        area1InitialNumber: '',
        area2TextLength: 0,
        area2InputType: 0,
        area2DropdownStartNumber: '',
        area2DropdownEndNumber: '',
        area2InitialNumber: '',
        area3TextLength: 0,
        area3InputType: 0,
        area3DropdownStartNumber: '',
        area3DropdownEndNumber: '',
        area3InitialNumber: '',
        area4TextLength: 0,
        area4InputType: 0,
        area4DropdownStartNumber: '',
        area4DropdownEndNumber: '',
        area4InitialNumber: '',
    },
    TWO_TOKEN_LOGIN_BLOCK: {
        buttonText: '',
        buttonSpinnerSvg: '',
        buttonSpinnerSize: 'text-base',
        buttonSpinnerStrokeSize: 'stroke-[1px]',
        buttonSpinnerFillColor: 'fill-[#ffffffff]',
        buttonSpinnerStrokeColor: 'stroke-[#ffffffff]',
        buttonSpinnerCustomClass: '',
        area1token: 'token1',
        area2token: 'token2',
        successDestination: '',
        failureMessage: '',
        networkErrorMessage: '',
        buttonType: 'a',
        divisionNumber: 3,
        loginAuthTargetField: '',
        numberOfSplitCharacters1: 4,
        numberOfSplitCharacters2: 4,
        numberOfSplitCharacters3: 4,
        numberOfSplitCharacters4: 4,

        t1Area1RegularExpressions: '',
        t1Area1TextLength: 4,
        t1Area1InputType: 1,
        t1Area1DropdownStartNumber: 1900,
        t1Area1DropdownEndNumber: 2100,
        t1Area1InitialNumber: 1970,
        t1Area1Label: '',
        t1Area1Placeholder: '',
        t1Area1Required: true,
        t1Area1RequiredDisplay: true,
        t1Area1RegExErrorText: '',
        t1Area1RequiredErrorText: '',
        t1Area1LengthErrorText: '',
        t1Area1Name: '',
        t1Area1AutoComplete: 'on',
        t1Area1InputMode: 'none',
        t1Area1LabelCustomClass: '',
        t1Area1InputCustomClass: '',
        t1Area1PlaceholderCustomClass: '',
        t1Area1ErrorTextCustomClass: '',
        t1Area1WrapCustomClass: '',

        t1Area2RegularExpressions: '',
        t1Area2TextLength: 4,
        t1Area2InputType: 1,
        t1Area2DropdownStartNumber: 1900,
        t1Area2DropdownEndNumber: 2100,
        t1Area2InitialNumber: 1970,
        t1Area2Label: '',
        t1Area2Placeholder: '',
        t1Area2Required: true,
        t1Area2RequiredDisplay: true,
        t1Area2RegExErrorText: '',
        t1Area2RequiredErrorText: '',
        t1Area2LengthErrorText: '',
        t1Area2Name: '',
        t1Area2AutoComplete: 'on',
        t1Area2InputMode: 'none',
        t1Area2LabelCustomClass: '',
        t1Area2InputCustomClass: '',
        t1Area2PlaceholderCustomClass: '',
        t1Area2ErrorTextCustomClass: '',
        t1Area2WrapCustomClass: '',

        t1Area3RegularExpressions: '',
        t1Area3TextLength: 4,
        t1Area3InputType: 3,
        t1Area3DropdownStartNumber: 1900,
        t1Area3DropdownEndNumber: 2100,
        t1Area3InitialNumber: 1970,
        t1Area3Label: '',
        t1Area3Placeholder: '',
        t1Area3Required: true,
        t1Area3RequiredDisplay: true,
        t1Area3RegExErrorText: '',
        t1Area3RequiredErrorText: '',
        t1Area3LengthErrorText: '',
        t1Area3Name: '',
        t1Area3AutoComplete: 'on',
        t1Area3InputMode: 'none',
        t1Area3LabelCustomClass: '',
        t1Area3InputCustomClass: '',
        t1Area3PlaceholderCustomClass: '',
        t1Area3ErrorTextCustomClass: '',
        t1Area3WrapCustomClass: '',

        t1Area4RegularExpressions: '',
        t1Area4TextLength: 4,
        t1Area4InputType: 1,
        t1Area4DropdownStartNumber: 1900,
        t1Area4DropdownEndNumber: 2100,
        t1Area4InitialNumber: 1970,
        t1Area4Label: '',
        t1Area4Placeholder: '',
        t1Area4Required: true,
        t1Area4RequiredDisplay: true,
        t1Area4RegExErrorText: '',
        t1Area4RequiredErrorText: '',
        t1Area4LengthErrorText: '',
        t1Area4Name: '',
        t1Area4AutoComplete: 'on',
        t1Area4InputMode: 'none',
        t1Area4LabelCustomClass: '',
        t1Area4InputCustomClass: '',
        t1Area4PlaceholderCustomClass: '',
        t1Area4ErrorTextCustomClass: '',
        t1Area4WrapCustomClass: '',

        yearType: 0,
        yearDropdownStartNumber: 1900,
        yearDropdownEndNumber: 2100,
        yearInitialNumber: 1970,
        yearLabel: '',
        monthLabel: '',
        dayLabel: '',
        yearWrapCustomClass: '',
        monthWrapCustomClass: '',
        dayWrapCustomClass: '',
        t1WrapCustomClass: '',
        t2WrapCustomClass: '',
        blockWrapCustomClass: '',
        memo: '',
    },
    TWO_TOKEN_LOGIN: {
        buttonText: '',
        area1token: 'token1',
        area2token: 'token2',
        successDestination: '',
        failureMessage: '',
        networkErrorMessage: '',
        buttonType: 'a',
        divisionNumber: 3,
        loginAuthTargetField: '',
        numberOfSplitCharacters1: 4,
        numberOfSplitCharacters2: 4,
        numberOfSplitCharacters3: 4,
        numberOfSplitCharacters4: 4,

        t1Area1RegularExpressions: '',
        t1Area1TextLength: 4,
        t1Area1InputType: 1,
        t1Area1DropdownStartNumber: 1900,
        t1Area1DropdownEndNumber: 2030,
        t1Area1InitialNumber: 1970,
        t1Area1Label: '',
        t1Area1Placeholder: '',
        t1Area1Required: true,
        t1Area1RequiredDisplay: true,
        t1Area1RegExErrorText: '',
        t1Area1RequiredErrorText: '',
        t1Area1LengthErrorText: '',
        t1Area1Name: '',
        t1Area1AutoComplete: 'on',
        t1Area1InputMode: 'none',
        t1Area1LabelCustomClass: '',
        t1Area1InputCustomClass: '',
        t1Area1PlaceholderCustomClass: '',
        t1Area1ErrorTextCustomClass: '',
        t1Area1WrapCustomClass: '',

        t1Area2RegularExpressions: '',
        t1Area2TextLength: 4,
        t1Area2InputType: 1,
        t1Area2DropdownStartNumber: 1900,
        t1Area2DropdownEndNumber: 2100,
        t1Area2InitialNumber: 1970,
        t1Area2Label: '',
        t1Area2Placeholder: '',
        t1Area2Required: true,
        t1Area2RequiredDisplay: true,
        t1Area2RegExErrorText: '',
        t1Area2RequiredErrorText: '',
        t1Area2LengthErrorText: '',
        t1Area2Name: '',
        t1Area2AutoComplete: 'on',
        t1Area2InputMode: 'none',
        t1Area2LabelCustomClass: '',
        t1Area2InputCustomClass: '',
        t1Area2PlaceholderCustomClass: '',
        t1Area2ErrorTextCustomClass: '',
        t1Area2WrapCustomClass: '',

        t1Area3RegularExpressions: '',
        t1Area3TextLength: 4,
        t1Area3InputType: 1,
        t1Area3DropdownStartNumber: 1900,
        t1Area3DropdownEndNumber: 2100,
        t1Area3InitialNumber: 1970,
        t1Area3Label: '',
        t1Area3Placeholder: '',
        t1Area3Required: true,
        t1Area3RequiredDisplay: true,
        t1Area3RegExErrorText: '',
        t1Area3RequiredErrorText: '',
        t1Area3LengthErrorText: '',
        t1Area3Name: '',
        t1Area3AutoComplete: 'on',
        t1Area3InputMode: 'none',
        t1Area3LabelCustomClass: '',
        t1Area3InputCustomClass: '',
        t1Area3PlaceholderCustomClass: '',
        t1Area3ErrorTextCustomClass: '',
        t1Area3WrapCustomClass: '',

        t1Area4RegularExpressions: '',
        t1Area4TextLength: 4,
        t1Area4InputType: 1,
        t1Area4DropdownStartNumber: 1900,
        t1Area4DropdownEndNumber: 2100,
        t1Area4InitialNumber: 1970,
        t1Area4Label: '',
        t1Area4Placeholder: '',
        t1Area4Required: true,
        t1Area4RequiredDisplay: true,
        t1Area4RegExErrorText: '',
        t1Area4RequiredErrorText: '',
        t1Area4LengthErrorText: '',
        t1Area4Name: '',
        t1Area4AutoComplete: 'on',
        t1Area4InputMode: 'none',
        t1Area4LabelCustomClass: '',
        t1Area4InputCustomClass: '',
        t1Area4PlaceholderCustomClass: '',
        t1Area4ErrorTextCustomClass: '',
        t1Area4WrapCustomClass: '',

        yearType: 0,
        yearDropdownStartNumber: 1900,
        yearDropdownEndNumber: 2100,
        yearInitialNumber: 1970,
        yearLabel: '',
        monthLabel: '',
        dayLabel: '',
        yearWrapCustomClass: '',
        monthWrapCustomClass: '',
        dayWrapCustomClass: '',
        t1WrapCustomClass: '',
        t2WrapCustomClass: '',
        blockWrapCustomClass: '',
        memo: '',
    },
    TWO_TOKEN_LOGIN_1: {
        tokenId: 'token1',
        tokenBirthday: 'token1',
        divisionNumber: 1,
        successDestination: '',
        loginAuthTargetField: '',
        numberOfSplitCharacters1: 4,
        numberOfSplitCharacters2: 4,
        numberOfSplitCharacters3: 4,
        numberOfSplitCharacters4: 4,

        //For 1
        id1Label: '',
        id1Placeholder: '',
        id1InputMode: 'none',
        id1Name: '',
        id1AutoComplete: 'on',
        id1Required: true,
        id1RequiredDisplay: true,
        id1RequiredErrorText: '',
        id1MinlengthText: 1,
        id1MinlengthError: '',
        id1MaxlengthText: 99,
        id1MaxlengthError: '',
        id1LoginFailureText: '',
        id1RegularExpression1: '',
        id1RegularExpression1ErrorText: '',
        id1RegularExpression2: '',
        id1RegularExpression2ErrorText: '',
        id1RegularExpression3: '',
        id1RegularExpression3ErrorText: '',
        id1RegularExpression4: '',
        id1RegularExpression4ErrorText: '',
        id1LabelCustomClass: '',
        id1RequiredCustomClass: '',
        id1InputCustomClass: '',
        id1PlaceholderCustomClass: '',
        id1ErrorCustomClass: '',
        id1WrapCustomClass: '',
        // For 2
        id2Label: '',
        id2Placeholder: '',
        id2InputMode: 'none',
        id2Name: '',
        id2AutoComplete: 'on',
        id2Required: true,
        id2RequiredDisplay: true,
        id2RequiredErrorText: '',
        id2MinlengthText: 1,
        id2MinlengthError: '',
        id2MaxlengthText: 99,
        id2MaxlengthError: '',
        id2LoginFailureText: '',
        id2RegularExpression1: '',
        id2RegularExpression1ErrorText: '',
        id2RegularExpression2: '',
        id2RegularExpression2ErrorText: '',
        id2RegularExpression3: '',
        id2RegularExpression3ErrorText: '',
        id2RegularExpression4: '',
        id2RegularExpression4ErrorText: '',
        id2LabelCustomClass: '',
        id2RequiredCustomClass: '',
        id2InputCustomClass: '',
        id2PlaceholderCustomClass: '',
        id2ErrorCustomClass: '',
        id2WrapCustomClass: '',
        //For 3
        id3Label: '',
        id3Placeholder: '',
        id3InputMode: 'none',
        id3Name: '',
        id3AutoComplete: 'on',
        id3Required: true,
        id3RequiredDisplay: true,
        id3RequiredErrorText: '',
        id3MinlengthText: 1,
        id3MinlengthError: '',
        id3MaxlengthText: 99,
        id3MaxlengthError: '',
        id3LoginFailureText: '',
        id3RegularExpression1: '',
        id3RegularExpression1ErrorText: '',
        id3RegularExpression2: '',
        id3RegularExpression2ErrorText: '',
        id3RegularExpression3: '',
        id3RegularExpression3ErrorText: '',
        id3RegularExpression4: '',
        id3RegularExpression4ErrorText: '',
        id3LabelCustomClass: '',
        id3RequiredCustomClass: '',
        id3InputCustomClass: '',
        id3PlaceholderCustomClass: '',
        id3ErrorCustomClass: '',
        id3WrapCustomClass: '',
        //For 4
        id4Label: '',
        id4Placeholder: '',
        id4InputMode: 'none',
        id4Name: '',
        id4AutoComplete: 'on',
        id4Required: true,
        id4RequiredDisplay: true,
        id4RequiredErrorText: '',
        id4MinlengthText: 1,
        id4MinlengthError: '',
        id4MaxlengthText: 99,
        id4MaxlengthError: '',
        id4LoginFailureText: '',
        id4RegularExpression1: '',
        id4RegularExpression1ErrorText: '',
        id4RegularExpression2: '',
        id4RegularExpression2ErrorText: '',
        id4RegularExpression3: '',
        id4RegularExpression3ErrorText: '',
        id4RegularExpression4: '',
        id4RegularExpression4ErrorText: '',
        id4LabelCustomClass: '',
        id4RequiredCustomClass: '',
        id4InputCustomClass: '',
        id4PlaceholderCustomClass: '',
        id4ErrorCustomClass: '',
        id4WrapCustomClass: '',

        birthdayYearType: 0,
        birthdayYearStartNumber: 1900,
        birthdayYearEndNumber: 2030,
        birthdayYearInitialNumber: 1970,
        birthdayYearLabel: '',
        birthdayYearLabelCustomClass: '',
        birthdayYearWrapCustomClass: '',
        birthdayMonthLabel: '',
        birthdayMonthLabelCustomClass: '',
        birthdayMonthWrapCustomClass: '',
        birthdayDayLabel: '',
        birthdayDayLabelCustomClass: '',
        birthdayDayWrapCustomClass: '',
        buttonType: 'a',
        buttonText: '',
        buttonLoginFailureText: '',
        buttonNetworkErrorText: '',
        buttonSpinnerSvg: '',
        buttonSpinnerSize: 'text-base',
        buttonSpinnerStrokeSize: 'stroke-[1px]',
        buttonSpinnerFillColor: 'fill-[#ffffffff]',
        buttonSpinnerStrokeColor: 'stroke-[#ffffffff]',
        buttonSpinnerCustomClass: '',
        buttonCustomClass: '',
        buttonErrorCustomClass: '',
        idWrapCustomClass: '',
        birthdayWrapCustomClass: '',
        buttonWrapCustomClass: '',
        blockWrapCustomClass: '',
        memo: '',
    },
    TWO_TOKEN_LOGIN_2: {
        tokenId: 'token1',
        tokenPassword: 'token1',
        divisionNumber: 1,
        successDestination: '',
        loginAuthTargetField: '',
        numberOfSplitCharacters1: 4,
        numberOfSplitCharacters2: 4,
        numberOfSplitCharacters3: 4,
        numberOfSplitCharacters4: 4,

        //For 1
        id1Label: '',
        id1Placeholder: '',
        id1InputMode: 'none',
        id1Name: '',
        id1AutoComplete: 'on',
        id1Required: true,
        id1RequiredDisplay: true,
        id1RequiredErrorText: '',
        id1MinlengthText: 1,
        id1MinlengthError: '',
        id1MaxlengthText: 99,
        id1MaxlengthError: '',
        id1LoginFailureText: '',
        id1RegularExpression1: '',
        id1RegularExpression1ErrorText: '',
        id1RegularExpression2: '',
        id1RegularExpression2ErrorText: '',
        id1RegularExpression3: '',
        id1RegularExpression3ErrorText: '',
        id1RegularExpression4: '',
        id1RegularExpression4ErrorText: '',
        id1LabelCustomClass: '',
        id1RequiredCustomClass: '',
        id1InputCustomClass: '',
        id1PlaceholderCustomClass: '',
        id1ErrorCustomClass: '',
        id1WrapCustomClass: '',
        // For 2
        id2Label: '',
        id2Placeholder: '',
        id2InputMode: 'none',
        id2Name: '',
        id2AutoComplete: 'on',
        id2Required: true,
        id2RequiredDisplay: true,
        id2RequiredErrorText: '',
        id2MinlengthText: 1,
        id2MinlengthError: '',
        id2MaxlengthText: 99,
        id2MaxlengthError: '',
        id2LoginFailureText: '',
        id2RegularExpression1: '',
        id2RegularExpression1ErrorText: '',
        id2RegularExpression2: '',
        id2RegularExpression2ErrorText: '',
        id2RegularExpression3: '',
        id2RegularExpression3ErrorText: '',
        id2RegularExpression4: '',
        id2RegularExpression4ErrorText: '',
        id2LabelCustomClass: '',
        id2RequiredCustomClass: '',
        id2InputCustomClass: '',
        id2PlaceholderCustomClass: '',
        id2ErrorCustomClass: '',
        id2WrapCustomClass: '',
        //For 3
        id3Label: '',
        id3Placeholder: '',
        id3InputMode: 'none',
        id3Name: '',
        id3AutoComplete: 'on',
        id3Required: true,
        id3RequiredDisplay: true,
        id3RequiredErrorText: '',
        id3MinlengthText: 1,
        id3MinlengthError: '',
        id3MaxlengthText: 99,
        id3MaxlengthError: '',
        id3LoginFailureText: '',
        id3RegularExpression1: '',
        id3RegularExpression1ErrorText: '',
        id3RegularExpression2: '',
        id3RegularExpression2ErrorText: '',
        id3RegularExpression3: '',
        id3RegularExpression3ErrorText: '',
        id3RegularExpression4: '',
        id3RegularExpression4ErrorText: '',
        id3LabelCustomClass: '',
        id3RequiredCustomClass: '',
        id3InputCustomClass: '',
        id3PlaceholderCustomClass: '',
        id3ErrorCustomClass: '',
        id3WrapCustomClass: '',
        //For 4
        id4Label: '',
        id4Placeholder: '',
        id4InputMode: 'none',
        id4Name: '',
        id4AutoComplete: 'on',
        id4Required: true,
        id4RequiredDisplay: true,
        id4RequiredErrorText: '',
        id4MinlengthText: 1,
        id4MinlengthError: '',
        id4MaxlengthText: 99,
        id4MaxlengthError: '',
        id4LoginFailureText: '',
        id4RegularExpression1: '',
        id4RegularExpression1ErrorText: '',
        id4RegularExpression2: '',
        id4RegularExpression2ErrorText: '',
        id4RegularExpression3: '',
        id4RegularExpression3ErrorText: '',
        id4RegularExpression4: '',
        id4RegularExpression4ErrorText: '',
        id4LabelCustomClass: '',
        id4RequiredCustomClass: '',
        id4InputCustomClass: '',
        id4PlaceholderCustomClass: '',
        id4ErrorCustomClass: '',
        id4WrapCustomClass: '',

        passwordLabel: '',
        passwordPlaceholder: '',
        passwordInputMode: 'none',
        passwordName: '',
        passwordAutoComplete: 'on',
        passwordRequired: true,
        passwordRequiredDisplay: true,
        passwordRequiredErrorText: '',
        passwordMinlengthText: 1,
        passwordMinlengthError: '',
        passwordMaxlengthText: 99,
        passwordMaxlengthError: '',
        passwordLoginFailureText: '',
        passwordRegularExpression1: '',
        passwordRegularExpression1ErrorText: '',
        passwordRegularExpression2: '',
        passwordRegularExpression2ErrorText: '',
        passwordRegularExpression3: '',
        passwordRegularExpression3ErrorText: '',
        passwordRegularExpression4: '',
        passwordRegularExpression4ErrorText: '',
        passwordLabelCustomClass: '',
        passwordRequiredCustomClass: '',
        passwordInputCustomClass: '',
        passwordPlaceholderCustomClass: '',
        passwordErrorCustomClass: '',

        buttonType: 'a',
        buttonText: '',
        buttonLoginFailureText: '',
        buttonNetworkErrorText: '',
        buttonCustomClass: '',
        buttonErrorCustomClass: '',
        idWrapCustomClass: '',
        passwordWrapCustomClass: '',
        buttonWrapCustomClass: '',
        blockWrapCustomClass: '',
        buttonSpinnerSvg: '',
        buttonSpinnerSize: 'text-base',
        buttonSpinnerStrokeSize: 'stroke-[1px]',
        buttonSpinnerFillColor: 'fill-[#ffffffff]',
        buttonSpinnerStrokeColor: 'stroke-[#ffffffff]',
        buttonSpinnerCustomClass: '',
        memo: '',
    },
    THREE_TOKEN_LOGIN: {
        buttonText: '',
        successDestination: '',
        failureMessage: '',
        buttonType: 'a',
        loginAreaCustomClass: '',
        formErrorMessage: '',
        memo: '',
        divisionNumber: 3,
        area1TextLength: 0,
        area1InputType: 0,
        area1DropdownStartNumber: '',
        area1DropdownEndNumber: '',
        area2TextLength: 0,
        area2InputType: 0,
        area2DropdownStartNumber: '',
        area2DropdownEndNumber: '',
        area3TextLength: 0,
        area3InputType: 0,
        area3DropdownStartNumber: '',
        area3DropdownEndNumber: '',
        area4TextLength: 0,
        area4InputType: 0,
        area4DropdownStartNumber: '',
        area4DropdownEndNumber: '',
        area1InitialNumber: '',
        area2InitialNumber: '',
        area3InitialNumber: '',
        area4InitialNumber: '',
        yearType: 0,
        yearDropdownStartNumber: 1900,
        yearDropdownEndNumber: 2100,
        year4InitialNumber: 1970,
        t3TextLength: 0,
        t3InputType: 0,
        t3DropdownStartNumber: '',
        t3DropdownEndNumber: '',
        t3InitialNumber: '',
    },
    INPUT_TEXT_SETTINGS_BLOCK: {
        columns: 1,
        area1FieldId: '',
        area1FieldCode: '',
        area1RegularExpressions: '',
        area1Label: '',
        area1Required: false,
        area1Value: '',
        area1Placeholder: '',
        area1Maxlength: '',
        area1InputMode: 'none',
        area1ReadOnly: false,
        area1ErrorText: '',
        area1InputType: 'text',
        area1Name: '',
        area1AutoComplete: 'on',
        area1WrapCustomClass: '',
        area2FieldId: '',
        area2FieldCode: '',
        area2RegularExpressions: '',
        area2Label: '',
        area2Required: false,
        area2Value: '',
        area2Placeholder: '',
        area2Maxlength: '',
        area2InputMode: 'none',
        area2ReadOnly: false,
        area2ErrorText: '',
        area2InputType: 'text',
        area2Name: '',
        area2AutoComplete: 'on',
        area2WrapCustomClass: '',
        area3FieldId: '',
        area3FieldCode: '',
        area3RegularExpressions: '',
        area3Label: '',
        area3Required: false,
        area3Value: '',
        area3Placeholder: '',
        area3Maxlength: '',
        area3InputMode: 'none',
        area3ReadOnly: false,
        area3ErrorText: '',
        area3InputType: 'text',
        area3Name: '',
        area3AutoComplete: 'on',
        area3WrapCustomClass: '',
        blockWrapCustomClass: '',
        memo: '',
    },
    INPUT_TEXT: {
        columns: 1,
        blockWrapCustomClass: '',
        memo: '',

        area1FieldId: '',
        area1FieldCode: '',
        area1RegularExpressions: '',
        area1Label: '',
        area1Required: false,
        area1RequiredDisplay: true,
        area1Value: '',
        area1Placeholder: '',
        area1Minlength: '',
        area1Maxlength: '',
        area1InputMode: 'none',
        area1ReadOnly: false,
        // area1ErrorText: '',
        area1InputType: 'text',
        area1Name: '',
        area1AutoComplete: 'on',
        area1RegExErrorText: '',
        area1RequiredErrorText: '',
        area1TypeErrorText: '',
        area1LabelCustomClass: '',
        area1InputCustomClass: '',
        area1PlaceholderCustomClass: '',
        area1ErrorTextCustomClass: '',
        area1WrapCustomClass: '',

        area2FieldId: '',
        area2FieldCode: '',
        area2RegularExpressions: '',
        area2Label: '',
        area2Required: false,
        area2RequiredDisplay: true,
        area2Value: '',
        area2Placeholder: '',
        area2Minlength: '',
        area2Maxlength: '',
        area2InputMode: 'none',
        area2ReadOnly: false,
        //area2ErrorText: '',
        area2InputType: 'text',
        area2Name: '',
        area2AutoComplete: 'on',
        area2RegExErrorText: '',
        area2RequiredErrorText: '',
        area2TypeErrorText: '',
        area2LabelCustomClass: '',
        area2InputCustomClass: '',
        area2PlaceholderCustomClass: '',
        area2ErrorTextCustomClass: '',
        area2WrapCustomClass: '',

        area3FieldId: '',
        area3FieldCode: '',
        area3RegularExpressions: '',
        area3Label: '',
        area3Required: false,
        area3RequiredDisplay: true,
        area3Value: '',
        area3Placeholder: '',
        area3Maxlength: '',
        area3Minlength: '',
        area3InputMode: 'none',
        area3ReadOnly: false,
        //area3ErrorText: '',
        area3InputType: 'text',
        area3Name: '',
        area3AutoComplete: 'on',
        area3RegExErrorText: '',
        area3RequiredErrorText: '',
        area3TypeErrorText: '',
        area3LabelCustomClass: '',
        area3InputCustomClass: '',
        area3PlaceholderCustomClass: '',
        area3ErrorTextCustomClass: '',
        area3WrapCustomClass: '',
    },
    INPUT_TEXTAREA_SETTINGS_BLOCK: {
        fieldId: '',
        fieldCode: '',
        // regularExpressions: '',
        label: '',
        required: false,
        value: '',
        placeholder: '',
        maxlength: '',
        readOnly: false,
        // errorText: '',
        // regExErrorText: '',
        requiredErrorText: '',
        name: '',
        autoComplete: 'on',
        labelCustomClass: '',
        textAreaCustomClass: '',
        placeholderCustomClass: '',
        errorTextCustomClass: '',
        areaWrapCustomClass: '',
        blockWrapCustomClass: '',
        memo: '',
    },
    INPUT_DATE_SETTINGS_BLOCK: {
        division: false,
        fieldId: '',
        fieldCode: '',
        readOnly: false,
        label: '',
        picker: '',
        required: false,
        value: '',
        minValue: '',
        maxValue: '',
        step: '',
        errorText: '',
        minError: '',
        maxError: '',
        placeholder: '',
        name: '',
        autoComplete: 'on',
        yearType: 0,
        yearLabel: '',
        yearName: '',
        yearRequired: false,
        yearDropdownStartNumber: '1900',
        yearDropdownEndNumber: '2050',
        yearInitialNumber: '1970',
        monthType: 0,
        monthLabel: '',
        monthName: '',
        monthRequired: false,
        monthInitialNumber: '01',
        dayType: 0,
        dayLabel: '',
        dayName: '',
        dayRequired: false,
        dayInitialNumber: '01',
        yearLabelCustomClass: '',
        yearRequiredErrorCustomClass: '',
        yearInputCustomClass: '',
        yearWrapCustomClass: '',
        monthLabelCustomClass: '',
        monthRequiredErrorCustomClass: '',
        monthInputCustomClass: '',
        monthWrapCustomClass: '',
        dayLabelCustomClass: '',
        dayRequiredErrorCustomClass: '',
        dayInputCustomClass: '',
        dayWrapCustomClass: '',

        labelCustomClass: '',
        inputDateCustomClass: '',
        placeholderCustomClass: '',
        errorTextCustomClass: '',
        areaWrapCustomClass: '',

        blockWrapCustomClass: '',
        memo: '',
    },
    INPUT_TIME_SETTINGS_BLOCK: {
        division: false,
        fieldId: '',
        fieldCode: '',
        readOnly: false,
        label: '',
        picker: '',
        required: false,
        hourRequired: false,
        minuteRequired: false,
        value: '',
        minValue: '',
        maxValue: '',
        step: '',
        errorText: '',
        minErrorText: '',
        maxErrorText: '',
        name: '',
        errorCustomClass: '',
        labelCustomClass: '',
        inputTimeCustomClass: '',

        autoComplete: 'on',
        hourType: 0,
        hourLabel: '',
        hourName: '',
        hourDropdownStartNumber: 0,
        hourDropdownEndNumber: 0,
        hourInitialNumber: 1,
        minuteType: 0,
        minuteLabel: '',
        minuteName: '',
        minuteDropdownStartNumber: 0,
        minuteDropdownEndNumber: 0,
        minuteInitialNumber: 1,
        hourLabelCustomClass: '',
        hourErrorCustomClass: '',
        hourInputCustomClass: '',
        hourWrapCustomClass: '',
        minuteLabelCustomClass: '',
        minuteErrorCustomClass: '',
        minuteInputCustomClass: '',
        minuteWrapCustomClass: '',

        placeholderCustomClass: '',
        //areaWrapCustomClass:'',
        blockWrapCustomClass: '',
        memo: '',
    },
    INPUT_NUMBER_SETTINGS_BLOCK: {
        inputNumberQuantity: 1,
        blockWrapCustomClass: '',
        memo: '',

        area1FieldId: '',
        area1FieldCode: '',
        area1label: '',
        area1lSteper: 1,
        area1Required: false,
        area1value: '',
        area1minValue: '',
        area1maxValue: '',
        area1step: '',
        area1ReadOnly: false,
        // area1ErrorText: '',
        area1RequiredErrorText: '',
        area1MinlengthErrorText: '',
        area1MaxlengthErrorText: '',
        area1StepErrorText: '',
        area1Placeholder: '',
        area1Name: '',
        area1AutoComplete: 'on',
        area1LabelCustomClass: '',
        area1InputCustomClass: '',
        area1PlaceholderCustomClass: '',
        area1ErrorTextCustomClass: '',
        area1WrapCustomClass: '',

        area2FieldId: '',
        area2FieldCode: '',
        area2label: '',
        area2lSteper: 1,
        area2Required: false,
        area2value: '',
        area2minValue: '',
        area2maxValue: '',
        area2step: '',
        area2ReadOnly: false,
        // area2ErrorText: '',
        area2RequiredErrorText: '',
        area2MinlengthErrorText: '',
        area2MaxlengthErrorText: '',
        area2StepErrorText: '',
        area2Placeholder: '',
        area2Name: '',
        area2AutoComplete: 'on',
        area2LabelCustomClass: '',
        area2InputCustomClass: '',
        area2PlaceholderCustomClass: '',
        area2ErrorTextCustomClass: '',
        area2WrapCustomClass: '',
    },
    JOIN_INPUT_FORM_SETTINGS_BLOCK: {
        numberOfCombine: 1,
        fieldId: '',
        fieldCode: '',
        displayConjunction: '',
        area1RegularExpressions: '',
        area1FieldCode: '',
        area1Label: '',
        area1Required: '',
        area1Value: '',
        area1Placeholder: '',
        area1Maxlength: '',
        area1InputMode: '',
        area1ReadOnly: '',
        area1ErrorText: '',
        area1InputType: '',
        area1Name: '',
        area1AutoComplete: '',
        area1DataPrefix: '',
        area1DataSuffix: '',
        area1WrapCustomClass: '',

        area2RegularExpressions: '',
        area2FieldCode: '',
        area2Label: '',
        area2Required: '',
        area2Value: '',
        area2Placeholder: '',
        area2Maxlength: '',
        area2InputMode: '',
        area2ReadOnly: '',
        area2ErrorText: '',
        area2InputType: '',
        area2Name: '',
        area2AutoComplete: '',
        area2DataPrefix: '',
        area2DataSuffix: '',
        area2WrapCustomClass: '',

        area3RegularExpressions: '',
        area3FieldCode: '',
        area3Label: '',
        area3Required: '',
        area3Value: '',
        area3Placeholder: '',
        area3Maxlength: '',
        area3InputMode: '',
        area3ReadOnly: '',
        area3ErrorText: '',
        area3InputType: '',
        area3Name: '',
        area3AutoComplete: '',
        area3DataPrefix: '',
        area3DataSuffix: '',
        area3WrapCustomClass: '',

        area4RegularExpressions: '',
        area4FieldCode: '',
        area4Label: '',
        area4Required: '',
        area4Value: '',
        area4Placeholder: '',
        area4Maxlength: '',
        area4InputMode: '',
        area4ReadOnly: '',
        area4ErrorText: '',
        area4InputType: '',
        area4Name: '',
        area4AutoComplete: '',
        area4DataPrefix: '',
        area4DataSuffix: '',
        area4WrapCustomClass: '',

        area5RegularExpressions: '',
        area5FieldCode: '',
        area5Label: '',
        area5Required: '',
        area5Value: '',
        area5Placeholder: '',
        area5Maxlength: '',
        area5InputMode: '',
        area5ReadOnly: '',
        area5ErrorText: '',
        area5InputType: '',
        area5Name: '',
        area5AutoComplete: '',
        area5DataPrefix: '',
        area5DataSuffix: '',
        area5WrapCustomClass: '',
        blockWrapCustomClass: '',
        memo: '',
    },
    COMBINE_INPUT_TEXT: {
        numberOfCombine: 1,
        fieldId: '',
        fieldCode: '',
        //displayConjunction: '',
        numberOfSplitCharacters1: 4,
        numberOfSplitCharacters2: 4,
        numberOfSplitCharacters3: 4,
        numberOfSplitCharacters4: 4,
        numberOfSplitCharacters5: 4,

        area1RegularExpressions: '',
        area1Label: '',
        area1Required: false,
        area1Value: '',
        area1Placeholder: '',
        area1Maxlength: 256,
        area1InputMode: 'none',
        area1ReadOnly: false,
        area1RequiredDisplay: false,
        area1InputType: 'text',
        area1Name: '',
        area1AutoComplete: 'on',
        //area1DataPrefix: "",
        //area1DataSuffix: "",
        area1RegExErrorText: '',
        area1RequiredErrorText: '',
        area1LabelCustomClass: '',
        area1InputCustomClass: '',
        area1PlaceholderCustomClass: '',
        area1ErrorTextCustomClass: '',
        area1WrapCustomClass: '',

        area2RegularExpressions: '',
        area2Label: '',
        area2Required: false,
        area2Value: '',
        area2Placeholder: '',
        area2Maxlength: 256,
        area2InputMode: 'none',
        area2ReadOnly: false,
        area2RequiredDisplay: false,
        area2InputType: 'text',
        area2Name: '',
        area2AutoComplete: 'on',
        //area2DataPrefix: "",
        //area2DataSuffix: "",
        area2RegExErrorText: '',
        area2RequiredErrorText: '',
        area2LabelCustomClass: '',
        area2InputCustomClass: '',
        area2PlaceholderCustomClass: '',
        area2ErrorTextCustomClass: '',
        area2WrapCustomClass: '',

        area3RegularExpressions: '',
        area3Label: '',
        area3Required: false,
        area3Value: '',
        area3Placeholder: '',
        area3Maxlength: 256,
        area3InputMode: 'none',
        area3ReadOnly: false,
        area3RequiredDisplay: false,
        area3InputType: 'text',
        area3Name: '',
        area3AutoComplete: 'on',
        //area3DataPrefix: "",
        //area3DataSuffix: "",
        area3RegExErrorText: '',
        area3RequiredErrorText: '',
        area3LabelCustomClass: '',
        area3InputCustomClass: '',
        area3PlaceholderCustomClass: '',
        area3ErrorTextCustomClass: '',
        area3WrapCustomClass: '',

        area4RegularExpressions: '',
        area4Label: '',
        area4Required: false,
        area4Value: '',
        area4Placeholder: '',
        area4Maxlength: 256,
        area4InputMode: 'none',
        area4ReadOnly: false,
        area4RequiredDisplay: false,
        area4InputType: 'text',
        area4Name: '',
        area4AutoComplete: 'on',
        //area4DataPrefix: "",
        //area4DataSuffix: "",
        area4RegExErrorText: '',
        area4RequiredErrorText: '',
        area4LabelCustomClass: '',
        area4InputCustomClass: '',
        area4PlaceholderCustomClass: '',
        area4ErrorTextCustomClass: '',
        area4WrapCustomClass: '',

        area5RegularExpressions: '',
        area5Label: '',
        area5Required: false,
        area5Value: '',
        area5Placeholder: '',
        area5Maxlength: 256,
        area5InputMode: 'none',
        area5ReadOnly: false,
        area5RequiredDisplay: false,
        area5InputType: 'text',
        area5Name: '',
        area5AutoComplete: 'on',
        //area5DataPrefix: "",
        //area5DataSuffix: "",
        area5RegExErrorText: '',
        area5RequiredErrorText: '',
        area5LabelCustomClass: '',
        area5InputCustomClass: '',
        area5PlaceholderCustomClass: '',
        area5ErrorTextCustomClass: '',
        area5WrapCustomClass: '',
        blockWrapCustomClass: '',
        memo: '',
    },
    CHECKBOX_SETTINGS_BLOCK: {
        verticalOrHorizontal: 0,
        fieldId: '',
        fieldCode: '',
        label: '',
        minQuantityErrorText: '',
        minQuantity: '',
        maxQuantity: '',
        name: '',
        labelCustomClass: '',
        inputCustomClass: '',
        errorTextCustomClass: '',
        areaWrapCustomClass: '',

        initialSelections: [],
        unchangeables: [],
        displayTexts: [],
        blockWrapCustomClass: '',
        memo: '',
    },
    SELECT_SETTINGS_BLOCK: {
        areaNumberQuantity: 1,
        area1FieldId: '',
        area1FieldCode: '',
        area1Label: '',
        area1ErrorText: '',
        area1Required: false,
        area1BlankInitialValue: '',
        area1name: '',
        area1Selected: '',
        area1WrapCustomClass: '',
        area1Unselectable: [],
        area1DisplayTexts: [],
        area2FieldId: '',
        area2FieldCode: '',
        area2Label: '',
        area2ErrorText: '',
        area2Required: false,
        area2BlankInitialValue: '',
        area2name: '',
        area2Selected: '',
        area2WrapCustomClass: '',
        area2Unselectable: [],
        area2DisplayTexts: [],
        blockWrapCustomClass: '',
        memo: '',
    },
    OPTION_SELECT: {
        areaNumberQuantity: 1,
        area1FieldId: '',
        area1FieldCode: '',
        area1Label: '',
        area1Size: 1,
        area1MinQuantity: 0,
        area1MaxQuantity: 99,
        area1NoValueOption: '',
        area1ErrorText: '',
        area1Name: '',
        area1Selected: [],
        area1LabelCustomClass: '',
        area1SelectCustomClass: '',
        area1ErrorTextCustomClass: '',

        area1WrapCustomClass: '',
        area1Unselectable: [],
        area1DisplayTexts: [],
        area2FieldId: '',
        area2FieldCode: '',
        area2Label: '',
        area2Size: 1,
        area2MinQuantity: 0,
        area2MaxQuantity: 99,
        area2NoValueOption: '',
        area2ErrorText: '',
        area2Name: '',
        area2Selected: [],
        area2LabelCustomClass: '',
        area2SelectCustomClass: '',
        area2ErrorTextCustomClass: '',
        area2WrapCustomClass: '',
        area2Unselectable: [],
        area2DisplayTexts: [],
        blockWrapCustomClass: '',
        memo: '',
    },
    RADIOA_SETTINGS_BLOCK: {
        fieldId: '',
        fieldCode: '',
        required: false,
        initialSelections: '',
        label: '',
        errorText: '',
        name: '',
        unchangeables: '',
        trueText: '',
        falseText: '',
        blockWrapCustomClass: '',
        memo: '',
    },
    RADIO_A: {
        fieldId: '',
        fieldCode: '',
        label: '',
        required: false,
        requiredDisplay: true,
        readOnly: false,
        unchangeables: [],
        initialSelections: '',
        name: '',
        requiredErrorText: '',
        trueText: '',
        falseText: '',
        blockWrapCustomClass: '',
        memo: '',
    },
    RADIOB_SETTINGS_BLOCK: {
        verticalOrHorizontal: 0,
        fieldId: '',
        fieldCode: '',
        required: false,
        initialSelections: '',
        label: '',
        requiredErrorText: '',
        name: '',
        unchangeables: [],
        displayTexts: [],
        labelCustomClass: '',
        inputRadioCustomClass: '',
        captionCustomClass: '',
        errorTextCustomClass: '',

        blockWrapCustomClass: '',
        memo: '',
    },
    SPACE_SETTINGS_BLOCK: {
        size: 0,
        axis: 0,
        customClass: '',
        memo: '',
    },
    FIELD_DISPLAY_SETTINGS_BLOCK: {
        displayType: 1,
        displayItem: [],
        blockWrapCustomClass: '',
        memo: '',
    },
    DISPLAY_FIELD: {
        //displayType: 1,
        displayItem: [],
        blockWrapCustomClass: '',
        memo: '',
    },
    displayItem: {
        listItemId: '',
        caption: '',
        filter: '',
        fields: [],
        conjunction: '',
        listItemCustomClass: '',
        isAllEmpty: 1,
        emptyText: '',
        firstSentence: '',
        endSentence: '',
        fieldsWrapCustomClass: '',
        captionWrapCustomClass: '',
        memo: '',
    },

    ZIP_CODE_SEARCH_SETTINGS_BLOCK: {
        displayType: 1,
        blockWrapCustomClass: '',
        numberOfInputItems: 3,
        memo: '',
    },
    ZIP_CODE_SEARCH: {
        displayType: 1,
        zip1Width: 'w-auto',
        zip2Width: 'w-auto',
        zipSearchError: '',
        zipTargetField: 'customerZipCode',
        zip1Label: '',
        zip2Label: '',
        zip1PlaceholderText: '',
        zip2PlaceholderText: '',
        zip1textLengthErrorText: '',
        zip2textLengthErrorText: '',
        zip1Required: true,
        zip2Required: true,
        zip1RequiredDisplay: true,
        zip2RequiredDisplay: true,
        zipAllLabelCustomClass: '',
        zipAllInputCustomClass: '',
        zipPlaceholderCustomClass: '',
        zipErrorCustomClass: '',
        zipOuterWrapCustomClass: '',
        useCityDropdown: false,
        ifEmptyInitialSelection: 1,
        cityDropdownTargetField: 'customerPrefectureNameList',
        dropdownWidth: 'w-auto',
        dropdownRequired: false,
        dropdownRequiredDisplay: false,
        dropdownLabel: '',
        dropdownLabelCustomClass: '',
        dropdownCustomClass: '',
        dropdownErrorCustomClass: '',
        dropdownWrapCustomClass: '',

        numberOfInputItems: 3,
        blockWrapCustomClass: '',
        memo: '',

        input1DataCollection: [],
        input1Width: 'w-auto',
        input1Required: false,
        input1RequiredDisplay: false,
        input1RequiredErrorText: '',
        input1Label: '',
        input1PlaceholderText: '',
        input1RegularExpressions: '',
        input1RegularExpressionsErrorText: '',
        input1Name: '',
        input1AutoComplete: 'on',
        input1InputMode: '',
        input1TargetField: 'customerPrefectureName',
        input1LabelCustomClass: '',
        input1InputCustomClass: '',
        input1PlaceholderCustomClass: '',
        input1ErrorTextCustomClass: '',
        input1WrapCustomClass: '',

        input2DataCollection: [],
        input2Width: 'w-auto',
        input2Required: false,
        input2RequiredDisplay: false,
        input2RequiredErrorText: '',
        input2Label: '',
        input2PlaceholderText: '',
        input2RegularExpressions: '',
        input2RegularExpressionsErrorText: '',
        input2Name: '',
        input2AutoComplete: 'on',
        input2InputMode: '',
        input2TargetField: 'customerPrefectureName',
        input2LabelCustomClass: '',
        input2InputCustomClass: '',
        input2PlaceholderCustomClass: '',
        input2ErrorTextCustomClass: '',
        input2WrapCustomClass: '',

        input3DataCollection: [],
        input3Width: 'w-auto',
        input3Required: false,
        input3RequiredDisplay: false,
        input3RequiredErrorText: '',
        input3Label: '',
        input3PlaceholderText: '',
        input3RegularExpressions: '',
        input3RegularExpressionsErrorText: '',
        input3Name: '',
        input3AutoComplete: 'on',
        input3InputMode: '',
        input3TargetField: 'customerPrefectureName',
        input3LabelCustomClass: '',
        input3InputCustomClass: '',
        input3PlaceholderCustomClass: '',
        input3ErrorTextCustomClass: '',
        input3WrapCustomClass: '',

        input4DataCollection: [],
        input4Width: 'w-auto',
        input4Required: false,
        input4RequiredDisplay: false,
        input4RequiredErrorText: '',
        input4Label: '',
        input4PlaceholderText: '',
        input4RegularExpressions: '',
        input4RegularExpressionsErrorText: '',
        input4Name: '',
        input4AutoComplete: 'on',
        input4InputMode: '',
        input4TargetField: 'customerPrefectureName',
        input4LabelCustomClass: '',
        input4InputCustomClass: '',
        input4PlaceholderCustomClass: '',
        input4ErrorTextCustomClass: '',
        input4WrapCustomClass: '',

        input5DataCollection: [],
        input5Width: 'w-auto',
        input5Required: false,
        input5RequiredDisplay: false,
        input5RequiredErrorText: '',
        input5Label: '',
        input5PlaceholderText: '',
        input5RegularExpressions: '',
        input5RegularExpressionsErrorText: '',
        input5Name: '',
        input5AutoComplete: 'on',
        input5InputMode: '',
        input5TargetField: 'customerPrefectureName',
        input5LabelCustomClass: '',
        input5InputCustomClass: '',
        input5PlaceholderCustomClass: '',
        input5ErrorTextCustomClass: '',
        input5WrapCustomClass: '',

        input6DataCollection: [],
        input6Width: 'w-auto',
        input6Required: false,
        input6RequiredDisplay: false,
        input6RequiredErrorText: '',
        input6Label: '',
        input6PlaceholderText: '',
        input6RegularExpressions: '',
        input6RegularExpressionsErrorText: '',
        input6Name: '',
        input6AutoComplete: 'on',
        input6InputMode: '',
        input6TargetField: 'customerPrefectureName',
        input6LabelCustomClass: '',
        input6InputCustomClass: '',
        input6PlaceholderCustomClass: '',
        input6ErrorTextCustomClass: '',
        input6WrapCustomClass: '',
    },
    CATEGORY_SETTINGS_BLOCK: {
        displayType: 1,
        blockWrapCustomClass: '',
        memo: '',
        blocks: [
            {
                appPageBlockId: uuid(),
                appPageBlockOrderNo: 0,
                key: 'INFORMATION_AREA',
                blockPageTitle: '情報エリアブロック',
                blockListCaption: '[情報エリアブロック]',
                blocks: [],
            },
        ],
    },
    CATEGORY: {
        displayType: 1,
        blockWrapCustomClass: '',
        memo: '',
        blocks: [
            {
                appPageBlockId: uuid(),
                appPageBlockOrderNo: 0,
                key: 'INFORMATION_AREA',
                blockPageTitle: '情報エリアブロック',
                blockListCaption: '[情報エリアブロック]',
                blocks: [],
            },
        ],
    },
    BUS_SETTINGS_BLOCK: {
        displayType: 1,
        blockWrapCustomClass: '',
        memo: '',
    },
    SLOT: {
        displayType: 1,
        blockWrapCustomClass: '',
        ifEmptyTargetField: '',
        destination: '',
        memo: '',
        blocks: [
            {
                appPageBlockId: uuid(),
                appPageBlockOrderNo: 0,
                key: 'INFORMATION_AREA',
                blockPageTitle: '情報エリアブロック',
                blockListCaption: '[情報エリアブロック]',
                blocks: [],
            },
        ],
    },
    INSTITUTE: {
        displayType: 2,
        blockWrapCustomClass: '',
        ifEmptyTargetField: '',
        destination: '',
        useMap: 1,
        mapDestination: '',
        userLinkedInstitute: 1,
        memo: '',
        blocks: [
            {
                appPageBlockId: uuid(),
                appPageBlockOrderNo: 0,
                key: 'INFORMATION_AREA',
                blockPageTitle: '情報エリアブロック',
                blockListCaption: '[情報エリアブロック]',
                blocks: [],
            },
        ],
    },
    ITEM_SETTINGS_BLOCK: {
        displayType: 1,
        blockWrapCustomClass: '',
        memo: '',
    },
    ITEM: {
        displayType: 1,
        blockWrapCustomClass: '',
        ifEmptyTargetField: '',
        itemFilterTargetField: '',
        memo: '',
        blocks: [
            {
                appPageBlockId: uuid(),
                appPageBlockOrderNo: 0,
                key: 'INFORMATION_AREA',
                blockPageTitle: '情報エリアブロック',
                blockListCaption: '[情報エリアブロック]',
                blocks: [],
            },
        ],
    },
    PAGE_TITLE_SETTINGS_BLOCK: {
        headingTagType: 1,
        firstSentence: '',
        endSentence: '',
        blockWrapCustomClass: '',
        memo: '',
    },
    HTML_EDITOR: {
        blockWrapCustomClass: '',
        htmlSorce: '',
        markupSource: '',
        memo: '',
    },

    DISPLAY_CONTROL_BLOCK_SETTING: {
        filter: '',
        blocks: [],
        blockWrapCustomClass: '',
        memo: '',
    },
    INPUT_BIRTHDAY: {
        fieldCode1: 'birthdayDatetime',
        fieldCode2: 'birthday',
        readOnly: false,
        yearType: 0,
        yearLabel: '',
        yearRequired: false,
        yearRequiredDisplay: false,
        yearName: '',
        yearDropdownStartNumber: 1900,
        yearDropdownEndNumber: 2030,
        yearInitialNumber: 1970,
        yearLabelCustomClass: '',
        yearRequiredCustomClass: '',
        yearInputCustomClass: '',
        yearWrapCustomClass: '',
        monthType: 0,
        monthLabel: '',
        monthRequired: false,
        monthRequiredDisplay: false,
        monthName: '',
        monthInitialNumber: 1,
        monthLabelCustomClass: '',
        monthRequiredCustomClass: '',
        monthInputCustomClass: '',
        monthWrapCustomClass: '',
        dayType: 0,
        dayLabel: '',
        dayRequired: false,
        dayRequiredDisplay: false,
        dayName: '',
        dayInitialNumber: 1,
        dayLabelCustomClass: '',
        dayRequiredCustomClass: '',
        dayInputCustomClass: '',
        dayWrapCustomClass: '',

        blockWrapCustomClass: '',
        memo: '',
    },
    BIRTHDAY_SETTINGS_BLOCK: {
        fieldCode1: 'birthdayDatetime',
        fieldCode2: 'birthday',
        readOnly: false,
        yearType: 0,
        yearLabel: '',
        yearRequired: false,
        yearName: '',
        yearDropdownStartNumber: 1900,
        yearDropdownEndNumber: 2100,
        yearInitialNumber: 1970,
        yearLabelCustomClass: '',
        yearRequiredCustomClass: '',
        yearInputCustomClass: '',
        yearWrapCustomClass: '',
        monthType: 0,
        monthLabel: '',
        monthRequired: false,
        monthName: '',
        monthInitialNumber: 1,
        monthLabelCustomClass: '',
        monthRequiredCustomClass: '',
        monthInputCustomClass: '',
        monthWrapCustomClass: '',
        dayType: 0,
        dayLabel: '',
        dayRequired: false,
        dayName: '',
        dayInitialNumber: 1,
        dayLabelCustomClass: '',
        dayRequiredCustomClass: '',
        dayInputCustomClass: '',
        dayWrapCustomClass: '',

        blockWrapCustomClass: '',
        memo: '',
    },
};

export const defaultColorCodes = [
    '#ffffffff',
    '#ffffffff',
    '#ffffffff',
    '#ffffffff',
    '#ffffffff',
    '#ffffffff',
    '#ffffffff',
    '#ffffffff',
    '#ffffffff',
    '#ffffffff',
    '#ffffffff',
    '#ffffffff',
];
export const defaultActiveHistories = {
    activeTab: 'freePages',
    activePageId: '',
};

const categorySelection1Settings = {
    info: {
        headerMenuQuantity: 2,
        headerMenu1Text: '',
        headerMenu1Function: 1,
        headerMenu1Url: '',
        headerMenu1Img: 2,
        headerMenu2Text: '',
        headerMenu2Destination: '',
        imgAreaImg: 1,
        examinationItemTitle: '',
        scheduleTitle: '',
    },
    styles: {
        cardOuterBorderColor: { borderColor: '#ffffff' },
        cardDivideColor: { borderColor: '#ffffff' },
        categoryNameTextColor: { color: '#ffffff' },
        headerAreaBackgroundColor: { backgroundColor: '#ffffff' },
        categoryDescription1TextColor: { color: '#ffffff' },
        categoryDescription1BackgroundColor: { backgroundColor: '#ffffff' },
        categoryDescription2TextColor: { color: '#ffffff' },
        categoryDescription2BackgroundColor: { backgroundColor: '#ffffff' },
        examinationItemTitleTextColor: { color: '#ffffff' },
        examinationItemTextColor: { color: '#ffffff' },
        examinationItemBackgroundColor: { backgroundColor: '#ffffff' },
        scheduleTitleTextColor: { color: '#ffffff' },
        scheduleTextColor: { color: '#ffffff' },
        scheduleBackgroundColor: { backgroundColor: '#ffffff' },
    },
    classes: {
        cardBorderRadius: 'rounded-none',
        cardBorderWidth: 'border-0',
        cardDivideWidthX: 'divide-x-0',
        cardDivideWidthY: 'divide-y-0',
        cardBorderStyle: 'border-solid',
        cardDivideStyle: 'divide-solid',
        cardOuterBorderColor: 'border-[#ffffff]',
        cardDivideColor: 'divide-[#ffffff]',
        categoryNameTextSize: 'text-base',
        categoryNameFontWeight: 'font-normal',
        categoryNameCustomClass: '',

        headerMenuButtonWrapCustomClass: '',
        headerWrapCustomClass: '',
        categoryNameTextColor: 'text-[#ffffff]',
        headerAreaBackgroundColor: 'bg-[#ffffff]',

        imgAreaImgRadius: 'rounded-none',
        imgAreaImgMaxHeight: 'h-auto',
        imgAreaImgCustomClass: '',
        imgAreaOuterWrapCustomClass: '',
        categoryDescription1TextSize: 'text-base',
        categoryDescription1FontWeight: 'font-normal',
        categoryDescription1TextColor: 'text-[#ffffff]',
        categoryDescription1BackgroundColor: 'bg-[#ffffff]',
        categoryDescription1PCustomClass: '',
        categoryDescription1PWrapCustomClass: '',
        categoryDescription2TextSize: 'text-base',
        categoryDescription2FontWeight: 'font-normal',
        categoryDescription2TextColor: 'text-[#ffffff]',
        categoryDescription2BackgroundColor: 'bg-[#ffffff]',
        categoryDescription2PCustomClass: '',
        categoryDescription2PWrapCustomClass: '',
        categoryDescriptionAllWrapCustomClass: '',
        examinationItemTitleTextSize: 'text-base',
        examinationItemTitleFontWeight: 'font-normal',
        examinationItemTitleCustomClass: '',
        examinationItemTextSize: 'text-base',
        examinationItemFontWeight: 'font-normal',
        examinationItemCustomClass: '',
        examinationItemTitleTextColor: 'text-[#ffffff]',
        examinationItemTextColor: 'text-[#ffffff]',
        examinationItemBackgroundColor: 'bg-[#ffffff]',
        examinationItemWrapCustomClass: '',
        scheduleTitleTextSize: 'text-base',
        scheduleTitleFontWeight: 'font-normal',
        scheduleTitleCustomClass: '',
        scheduleTextSize: 'text-base',
        scheduleFontWeight: 'font-normal',
        scheduleCustomClass: '',
        scheduleTitleTextColor: 'text-[#ffffff]',
        scheduleTextColor: 'text-[#ffffff]',
        scheduleBackgroundColor: 'bg-[#ffffff]',
        scheduleWrapCustomClass: '',
        cardOuterWrapCustomClass: '',
    },
    prefixClass: {},
    blocks: {},
};

const categorySelection2Settings = {
    info: {
        destination: '',
    },
    styles: {
        wrapBorderColor: { borderColor: '#ffffff' },
        wrapBoxShadowColor: { shadowColor: '#ffffff' },
        wrapBackgroundColor: { backgroundColor: '#ffffff' },
        areaTextColor: { color: '#ffffff' },
        areaBorderColor: { borderColor: '#ffffff' },
        areaBackgroundColor: { backgroundColor: '#ffffff' },
        areaBoxShadowColor: { shadowColor: '#ffffff' },
    },
    classes: {
        wrapBorderRadius: 'rounded-none',
        wrapBorderWidth: 'border-0',
        wrapBorderStyle: 'border-solid',
        wrapBoxShadow: 'shadow-none',
        wrapBorderColor: 'border-[#ffffff]',
        wrapBoxShadowColor: 'shadow-[#ffffff]',
        wrapBackgroundColor: 'bg-[#ffffff]',
        areaTextColor: 'text-[#ffffff]',
        areaBorderColor: 'border-[#ffffff]',
        areaBackgroundColor: 'bg-[#ffffff]',
        areaBoxShadowColor: 'shadow-[#ffffff]',
        areawrapCustomClass: '',
        wrapCustomClass: '',
    },
    prefixClass: {
        default: {
            wrapPaddingX: 'px-0',
            wrapGridColos: 'grid-cols-none',
            wrapGridGap: 'gap-0',
            areaTextSize: 'text-base',
            areaTextWeight: 'font-normal',
            areaBorderRadius: 'rounded-none',
            areaBorderWidth: 'border-0',
            areaBorderStyle: 'border-solid',
            areaBoxShadow: 'shadow-none',
            areaTextAlign: 'text-left',
            areaVerticalAlign: 'align-baseline',
            areaLetterSpacing: 'tracking-normal',
            areaPaddingX: 'px-0',
            areaPaddingY: 'py-0',
        },
        sm: {
            wrapPaddingX: 'sm:px-0',
            wrapGridColos: 'sm:grid-cols-none',
            wrapGridGap: 'sm:gap-0',
            areaTextSize: 'sm:text-base',
            areaTextWeight: 'sm:font-normal',
            areaBorderRadius: 'sm:rounded-none',
            areaBorderWidth: 'sm:border-0',
            areaBorderStyle: 'sm:border-solid',
            areaBoxShadow: 'sm:shadow-none',
            areaTextAlign: 'sm:text-left',
            areaVerticalAlign: 'sm:align-baseline',
            areaLetterSpacing: 'sm:tracking-normal',
            areaPaddingX: 'sm:px-0',
            areaPaddingY: 'sm:py-0',
        },
        md: {
            wrapPaddingX: 'md:px-0',
            wrapGridColos: 'md:grid-cols-none',
            wrapGridGap: 'md:gap-0',
            areaTextSize: 'md:text-base',
            areaTextWeight: 'md:font-normal',
            areaBorderRadius: 'md:rounded-none',
            areaBorderWidth: 'md:border-0',
            areaBorderStyle: 'md:border-solid',
            areaBoxShadow: 'md:shadow-none',
            areaTextAlign: 'md:text-left',
            areaVerticalAlign: 'md:align-baseline',
            areaLetterSpacing: 'md:tracking-normal',
            areaPaddingX: 'md:px-0',
            areaPaddingY: 'md:py-0',
        },
        lg: {
            wrapPaddingX: 'lg:px-0',
            wrapGridColos: 'lg:grid-cols-none',
            wrapGridGap: 'lg:gap-0',
            areaTextSize: 'lg:text-base',
            areaTextWeight: 'lg:font-normal',
            areaBorderRadius: 'lg:rounded-none',
            areaBorderWidth: 'lg:border-0',
            areaBorderStyle: 'lg:border-solid',
            areaBoxShadow: 'lg:shadow-none',
            areaTextAlign: 'lg:text-left',
            areaVerticalAlign: 'lg:align-baseline',
            areaLetterSpacing: 'lg:tracking-normal',
            areaPaddingX: 'lg:px-0',
            areaPaddingY: 'lg:py-0',
        },
        xl: {
            wrapPaddingX: 'xl:px-0',
            wrapGridColos: 'xl:grid-cols-none',
            wrapGridGap: 'xl:gap-0',
            areaTextSize: 'xl:text-base',
            areaTextWeight: 'xl:font-normal',
            areaBorderRadius: 'xl:rounded-none',
            areaBorderWidth: 'xl:border-0',
            areaBorderStyle: 'xl:border-solid',
            areaBoxShadow: 'xl:shadow-none',
            areaTextAlign: 'xl:text-left',
            areaVerticalAlign: 'xl:align-baseline',
            areaLetterSpacing: 'xl:tracking-normal',
            areaPaddingX: 'xl:px-0',
            areaPaddingY: 'xl:py-0',
        },
        '2xl': {
            wrapPaddingX: '2xl:px-0',
            wrapGridColos: '2xl:grid-cols-none',
            wrapGridGap: '2xl:gap-0',
            areaTextSize: '2xl:text-base',
            areaTextWeight: '2xl:font-normal',
            areaBorderRadius: '2xl:rounded-none',
            areaBorderWidth: '2xl:border-0',
            areaBorderStyle: '2xl:border-solid',
            areaBoxShadow: '2xl:shadow-none',
            areaTextAlign: '2xl:text-left',
            areaVerticalAlign: '2xl:align-baseline',
            areaLetterSpacing: '2xl:tracking-normal',
            areaPaddingX: '2xl:px-0',
            areaPaddingY: '2xl:py-0',
        },
    },
    blocks: {},
};

const instituteSelection1Settings = {
    info: {
        destination: '',
        destinationText: '',
        dentalCheckText: '',
    },
    styles: {
        instituteBorderColor: { borderColor: '#ffffff' },
        instituteDivideColor: { borderColor: '#ffffff' },
        instituteBoxShadowColor: { BoxShadowColor: '#ffffff' },
        headerTitleTextColor: { color: '#ffffff' },
        headerExplanationTextColor: { color: '#ffffff' },
        headerBackgroundColor: { backgroundColor: '#ffffff' },
        selectionAreaBackgroundColor: { backgroundColor: '#ffffff' },
        dentalCheckTextColor: { color: '#ffffff' },
        dentalCheckBackgroundColor: { backgroundColor: '#ffffff' },
        instituteNameTextColor: { color: '#ffffff' },
        instituteAddressTextColor: { color: '#ffffff' },
        selectionTextColor: { color: '#ffffff' },
        selectionTextColorHover: { color: '#ffffff' },
        selectionTextColorFocus: { color: '#ffffff' },
        selectionTextColorActive: { color: '#ffffff' },
        selectionBackgroundColor: { backgroundColor: '#ffffff' },
        selectionBackgroundColorHover: { backgroundColor: '#ffffff' },
        selectionBackgroundColorFocus: { backgroundColor: '#ffffff' },
        selectionBackgroundColorActive: { backgroundColor: '#ffffff' },
    },
    classes: {
        instituteDivideWidthX: 'divide-x-0',
        instituteDivideStyle: 'divide-solid',
        instituteBorderColor: 'border-[#ffffff]',
        instituteDivideColor: 'divide-[#ffffff]',
        instituteBoxShadowColor: 'shadow-[#ffffff]',
        instituteWrapCustomClass: '',
        headerTitleTextSize: 'text-base',
        headerTitleFontWeight: 'font-normal',
        headerTitleCustomClass: '',
        headerExplanationTextSize: 'text-base',
        headerExplanationFontWeight: 'font-normal',
        headerExplanationCustomClass: '',
        headerWrapCustomClass: '',
        headerTitleTextColor: 'text-[#ffffff]',
        headerExplanationTextColor: 'text-[#ffffff]',
        headerBackgroundColor: 'bg-[#ffffff]',
        selectionAreaBackgroundColor: 'bg-[#ffffff]',
        dentalCheckBorderRadius: 'rounded-none',
        dentalCheckTextSize: 'text-base',
        dentalCheckFontWeight: 'font-normal',
        dentalCheckCustomClass: '',
        dentalCheckTextColor: 'text-[#ffffff]',
        dentalCheckBackgroundColor: 'bg-[#ffffff]',
        instituteNameTextColor: 'text-[#ffffff]',
        instituteAddressTextColor: 'text-[#ffffff]',
        instituteNameCustomClass: '',
        instituteAddressCustomClass: '',
        selectionCustomClass: '',
    },
    prefixClass: {
        default: {
            instituteBorderRadius: 'rounded-none',
            instituteBorderWidth: 'border-0',
            instituteBorderStyle: 'border-solid',
            instituteMarginX: 'mx-0',
            instituteBoxShadow: 'shadow-none',
            instituteNameTextSize: 'text-base',
            instituteNameTextWeight: 'font-normal',
            instituteAddressTextSize: 'text-base',
            instituteAddressTextWeight: 'font-normal',
            selectionTextSize: 'text-base',
            selectionTextWeight: 'font-normal',
            instituteInfoPaddingX: 'px-0',
            instituteInfoPaddingY: 'py-0',
            selectionTextColor: 'text-[#ffffff]',
            selectionBackgroundColor: 'bg-[#ffffff]',
        },
        sm: {
            instituteBorderRadius: 'sm:rounded-none',
            instituteBorderWidth: 'sm:border-0',
            instituteBorderStyle: 'sm:border-solid',
            instituteMarginX: 'sm:mx-0',
            instituteBoxShadow: 'sm:shadow-none',
            instituteNameTextSize: 'sm:text-base',
            instituteNameTextWeight: 'sm:font-normal',
            instituteAddressTextSize: 'sm:text-base',
            instituteAddressTextWeight: 'sm:font-normal',
            selectionTextSize: 'sm:text-base',
            selectionTextWeight: 'sm:font-normal',
            instituteInfoPaddingX: 'sm:px-0',
            instituteInfoPaddingY: 'sm:py-0',
        },
        md: {
            instituteBorderRadius: 'md:rounded-none',
            instituteBorderWidth: 'md:border-0',
            instituteBorderStyle: 'md:border-solid',
            instituteMarginX: 'md:mx-0',
            instituteBoxShadow: 'md:shadow-none',
            instituteNameTextSize: 'md:text-base',
            instituteNameTextWeight: 'md:font-normal',
            instituteAddressTextSize: 'md:text-base',
            instituteAddressTextWeight: 'md:font-normal',
            selectionTextSize: 'md:text-base',
            selectionTextWeight: 'md:font-normal',
            instituteInfoPaddingX: 'md:px-0',
            instituteInfoPaddingY: 'md:py-0',
        },
        lg: {
            instituteBorderRadius: 'lg:rounded-none',
            instituteBorderWidth: 'lg:border-0',
            instituteBorderStyle: 'lg:border-solid',
            instituteMarginX: 'lg:mx-0',
            instituteBoxShadow: 'lg:shadow-none',
            instituteNameTextSize: 'lg:text-base',
            instituteNameTextWeight: 'lg:font-normal',
            instituteAddressTextSize: 'lg:text-base',
            instituteAddressTextWeight: 'lg:font-normal',
            selectionTextSize: 'lg:text-base',
            selectionTextWeight: 'lg:font-normal',
            instituteInfoPaddingX: 'lg:px-0',
            instituteInfoPaddingY: 'lg:py-0',
        },
        xl: {
            instituteBorderRadius: 'xl:rounded-none',
            instituteBorderWidth: 'xl:border-0',
            instituteBorderStyle: 'xl:border-solid',
            instituteMarginX: 'xl:mx-0',
            instituteBoxShadow: 'xl:shadow-none',
            instituteNameTextSize: 'xl:text-base',
            instituteNameTextWeight: 'xl:font-normal',
            instituteAddressTextSize: 'xl:text-base',
            instituteAddressTextWeight: 'xl:font-normal',
            selectionTextSize: 'xl:text-base',
            selectionTextWeight: 'xl:font-normal',
            instituteInfoPaddingX: 'xl:px-0',
            instituteInfoPaddingY: 'xl:py-0',
        },
        '2xl': {
            instituteBorderRadius: '2xl:rounded-none',
            instituteBorderWidth: '2xl:border-0',
            instituteBorderStyle: '2xl:border-solid',
            instituteMarginX: '2xl:mx-0',
            instituteBoxShadow: '2xl:shadow-none',
            instituteNameTextSize: '2xl:text-base',
            instituteNameTextWeight: '2xl:font-normal',
            instituteAddressTextSize: '2xl:text-base',
            instituteAddressTextWeight: '2xl:font-normal',
            selectionTextSize: '2xl:text-base',
            selectionTextWeight: '2xl:font-normal',
            instituteInfoPaddingX: '2xl:px-0',
            instituteInfoPaddingY: '2xl:py-0',
        },
        hover: {
            selectionTextColor: 'hover:text-[#ffffff]',
            selectionBackgroundColor: 'hover:bg-[#ffffff]',
        },
        focus: {
            selectionTextColor: 'focus:text-[#ffffff]',
            selectionBackgroundColor: 'focus:bg-[#ffffff]',
        },
        active: {
            selectionTextColor: 'active:text-[#ffffff]',
            selectionBackgroundColor: 'active:bg-[#ffffff]',
        },
    },
    blocks: {},
};

const instituteSelection2Settings = {
    info: {
        dentalCheckText: '',
        mapDestinationText: '',
        instituteDestinationText: '',
    },
    styles: {
        instituteBorderColor: { borderColor: '#ffffff' },
        instituteDivideColor: { borderColor: '#ffffff' },
        instituteBoxShadowColor: { shadowColor: '#ffffff' },
        instituteListBackgroundColor: { backgroundColor: '#ffffff' },
        instituteListBorderColor: { borderColor: '#ffffff' },
        instituteListBoxShadowColor: { shadowColor: '#ffffff' },
        instituteNameTextColor: { color: '#ffffff' },

        instituteAddressTextColor: { color: '#ffffff' },
        dentalCheckTextColor: { color: '#ffffff' },
        dentalCheckBackgroundColor: { backgroundColor: '#ffffff' },
        selectionTextColor: { color: '#ffffff' },
        selectionBackgroundColor: { backgroundColor: '#ffffff' },
        selectionTextColorHover: { color: '#ffffff' },
        selectionTextColorFocus: { color: '#ffffff' },
        selectionTextColorActive: { color: '#ffffff' },
        selectionBackgroundColorHover: { backgroundColor: '#ffffff' },
        selectionBackgroundColorFocus: { backgroundColor: '#ffffff' },
        selectionBackgroundColorActive: { backgroundColor: '#ffffff' },
    },
    classes: {
        instituteDivideWidthX: 'divide-x-0',
        instituteDivideWidthY: 'divide-y-0',
        instituteDivideStyle: 'divide-solid',
        instituteBorderColor: 'border-[#ffffff]',
        instituteDivideColor: 'divide-[#ffffff]',
        instituteBoxShadowColor: 'shadow-[#ffffff]',
        instituteWrapCustomClass: '',
        instituteListBackgroundColor: 'bg-[#ffffff]',
        instituteListBorderColor: 'border-[#ffffff]',
        instituteListBoxShadowColor: 'shadow-[#ffffff]',
        instituteListCustomClass: '',
        instituteNameTextColor: 'text-[#ffffff]',
        instituteNameCustomClass: '',

        instituteAddressTextColor: 'text-[#ffffff]',
        instituteAddressCustomClass: '',
        dentalCheckBorderRadius: 'rounded-none',
        dentalCheckTextSize: 'text-base',
        dentalCheckFontWeight: 'font-normal',
        dentalCheckTextColor: 'text-[#ffffff]',
        dentalCheckBackgroundColor: 'bg-[#ffffff]',
        dentalCheckCustomClass: '',
        selectionWrapCustomClass: '',
    },
    prefixClass: {
        default: {
            instituteBorderRadius: 'rounded-none',
            instituteBorderWidth: 'border-0',
            instituteBorderStyle: 'border-solid',
            instituteMarginX: 'mx-0',
            instituteBoxShadow: 'shadow-none',
            instituteNameTextSize: 'text-base',
            instituteNameTextWeight: 'font-normal',

            instituteListPaddingX: 'px-0',
            instituteListPaddingY: 'py-0',
            instituteListMarginX: 'mx-0',
            instituteListBoxShadow: 'shadow-none',
            instituteListBorderWidth: 'border-0',
            instituteListBorderStyle: 'border-solid',

            instituteAddressTextSize: 'text-base',
            instituteAddressTextWeight: 'font-normal',
            selectionTextSize: 'text-base',
            selectionTextWeight: 'font-normal',
            selectionTextColor: 'text-[#ffffff]',
            selectionBackgroundColor: 'bg-[#ffffff]',
        },
        sm: {
            instituteBorderRadius: 'sm:rounded-none',
            instituteBorderWidth: 'sm:border-0',
            instituteBorderStyle: 'sm:border-solid',
            instituteMarginX: 'sm:mx-0',
            instituteBoxShadow: 'sm:shadow-none',
            instituteNameTextSize: 'sm:text-base',
            instituteNameTextWeight: 'sm:font-normal',

            instituteListPaddingX: 'sm:px-0',
            instituteListPaddingY: 'sm:py-0',
            instituteListMarginX: 'sm:mx-0',
            instituteListBoxShadow: 'sm:shadow-none',
            instituteListBorderWidth: 'sm:border-0',
            instituteListBorderStyle: 'sm:border-solid',
            instituteAddressTextSize: 'text-base',
            instituteAddressTextWeight: 'font-normal',
            selectionTextSize: 'text-base',
            selectionTextWeight: 'font-normal',
        },
        md: {
            instituteBorderRadius: 'md:rounded-none',
            instituteBorderWidth: 'md:border-0',
            instituteBorderStyle: 'md:border-solid',
            instituteMarginX: 'md:mx-0',
            instituteBoxShadow: 'md:shadow-none',
            instituteNameTextSize: 'md:text-base',
            instituteNameTextWeight: 'md:font-normal',

            instituteListPaddingX: 'md:px-0',
            instituteListPaddingY: 'md:py-0',
            instituteListMarginX: 'md:mx-0',
            instituteListBoxShadow: 'md:shadow-none',
            instituteListBorderWidth: 'md:border-0',
            instituteListBorderStyle: 'md:border-solid',
            instituteAddressTextSize: 'text-base',
            instituteAddressTextWeight: 'font-normal',
            selectionTextSize: 'text-base',
            selectionTextWeight: 'font-normal',
        },
        lg: {
            instituteBorderRadius: 'lg:rounded-none',
            instituteBorderWidth: 'lg:border-0',
            instituteBorderStyle: 'lg:border-solid',
            instituteMarginX: 'lg:mx-0',
            instituteBoxShadow: 'lg:shadow-none',
            instituteNameTextSize: 'lg:text-base',
            instituteNameTextWeight: 'lg:font-normal',

            instituteListPaddingX: 'lg:px-0',
            instituteListPaddingY: 'lg:py-0',
            instituteListMarginX: 'lg:mx-0',
            instituteListBoxShadow: 'lg:shadow-none',
            instituteListBorderWidth: 'lg:border-0',
            instituteListBorderStyle: 'lg:border-solid',
            instituteAddressTextSize: 'text-base',
            instituteAddressTextWeight: 'font-normal',
            selectionTextSize: 'text-base',
            selectionTextWeight: 'font-normal',
        },
        xl: {
            instituteBorderRadius: 'xl:rounded-none',
            instituteBorderWidth: 'xl:border-0',
            instituteBorderStyle: 'xl:border-solid',
            instituteMarginX: 'xl:mx-0',
            instituteBoxShadow: 'xl:shadow-none',
            instituteNameTextSize: 'xl:text-base',
            instituteNameTextWeight: 'xl:font-normal',

            instituteListPaddingX: 'xl:px-0',
            instituteListPaddingY: 'xl:py-0',
            instituteListMarginX: 'xl:mx-0',
            instituteListBoxShadow: 'xl:shadow-none',
            instituteListBorderWidth: 'xl:border-0',
            instituteListBorderStyle: 'xl:border-solid',
            instituteAddressTextSize: 'text-base',
            instituteAddressTextWeight: 'font-normal',
            selectionTextSize: 'text-base',
            selectionTextWeight: 'font-normal',
        },
        '2xl': {
            instituteBorderRadius: '2xl:rounded-none',
            instituteBorderWidth: '2xl:border-0',
            instituteBorderStyle: '2xl:border-solid',
            instituteMarginX: '2xl:mx-0',
            instituteBoxShadow: '2xl:shadow-none',
            instituteNameTextSize: '2xl:text-base',
            instituteNameTextWeight: '2xl:font-normal',

            instituteListPaddingX: '2xl:px-0',
            instituteListPaddingY: '2xl:py-0',
            instituteListMarginX: '2xl:mx-0',
            instituteListBoxShadow: '2xl:shadow-none',
            instituteListBorderWidth: '2xl:border-0',
            instituteListBorderStyle: '2xl:border-solid',
            instituteAddressTextSize: 'text-base',
            instituteAddressTextWeight: 'font-normal',
            selectionTextSize: 'text-base',
            selectionTextWeight: 'font-normal',
        },
        hover: {
            selectionTextColor: 'hover:text-[#ffffff]',
            selectionBackgroundColor: 'hover:bg-[#ffffff]',
        },
        focus: {
            selectionTextColor: 'focus:text-[#ffffff]',
            selectionBackgroundColor: 'focus:bg-[#ffffff]',
        },
        active: {
            selectionTextColor: 'active:text-[#ffffff]',
            selectionBackgroundColor: 'active:bg-[#ffffff]',
        },
    },
    blocks: {},
};
const defaultTabState = {
    pageTitle: '',
    appName: '',
    activeTab: 'freePages',
    activePageId: '',
    appURL: '',
    tabItems: {
        freePages: [],
        commonPages: [],
        // defaultCommonPages.map(x => {
        //   return { ...x, appCommonPageId: uuid(), appId: appId }
        // })
        // ,
        settings: {
            appSettingQuery: {
                pageFrameSettings: { ...pageFrameSettings },
                logoSettings: { ...logoSettings },
                footerSettings: { ...footerSettings },
                step1Settings: { ...stepSettings },
                step2Settings: { ...stepSettings },
                step3Settings: { ...stepSettings },
                buttonASettings: buttonFormAttributes,
                buttonBSettings: buttonFormAttributes,
                buttonCSettings: buttonFormAttributes,
                appReservationRemidMailSettings: {},
                appReservationMailSettings: {},
                appReservationCancelMailSettings: {},
                appReservationRemidSMSSettings: {},
                appReservationSMSSettings: {},
                appReservationCancelSMSSettings: {},
                appNewsSettings: {},
                appDesignSettings: {},
                informationAreaSttings: { ...informationSettings },
                h1Settings: { ...hSettings },
                h2Settings: { ...hSettings },
                h3Settings: { ...hSettings },
                h4Settings: { ...hSettings },
                h5Settings: { ...hSettings },
                h6Settings: { ...hSettings },
                faviconSettings: { ...faviconSettings },
                inputTextSettings: { ...inputTextSettings },
                textareaFormSettings: { ...textareaFormSettings },
                selectFormSettings: { ...inputFormSettings },
                radioAFormSettings: { ...radioAFormSettings },
                radioBFormSettings: { ...radioBFormSettings },
                checkboxSettings: inputCheckboxTextareaFormSettings,
                checkboxIconSettings: checkboxFormSettings,
                customRadioIconSettings: radioboxFormSettings,
                customCssSettings: { customCss: '' },
                slotSelection1Settings: slotSelection1Settings,
                slotSelection2Settings: slotSelection2Settings,
                slotSelection3Settings: {},
                itemSelection1Settings: itemSelection1Settings,
                token1loginSettings: { ...token1loginSettings },
                token2loginSettings: { ...token2loginSettings },
                token2loginType1Settings: token2loginType1Settings,
                token2loginType2Settings: token2loginType2Settings,
                token3loginSettings: { ...token3loginSettings },
                eventSelection1Settings: {},
                eventSelection2Settings: {},
                eventSelection3Settings: {},
                categorySelection1Settings: { ...categorySelection1Settings },
                categorySelection2Settings: { ...categorySelection2Settings },
                categorySelection3Settings: { ...categorySelection1Settings },
                instituteSelection1Settings: { ...instituteSelection1Settings },
                instituteSelection2Settings: instituteSelection2Settings,
                instituteSelection3Settings: {},
                busSelection1Settings: {},
                busSelection2Settings: {},
                busSelection3Settings: {},
                inputDateSettings: { ...inputFormSettings },
                inputTimeSettings: { ...inputFormSettings },
                inputNumberSettings: { ...inputFormSettings },
                combinInputTextSettings: { ...combineInputFormSetting },
                zipSearchSettings: { ...zipSearchSettings },
                debugModeSettings: { ...debugModeSettings },
                inputBirthdaySettings: { ...inputBirthdaySettings },
            },
        },
        blocks: [],
        histories: {
            colorHistory: defaultColorCodes,
            customColors: defaultColorCodes,
            actives: defaultActiveHistories,
        },
    },
};

const appDesignerState = atom({
    key: 'app-designer-state',
    default: defaultTabState,
    effects_UNSTABLE: [persistAtom],
});

const getSelectedPageData = selector({
    key: 'app-designer-selector',
    get: ({ get }) => {
        const data = get(appDesignerState);
        const { activeTab, activePageId, tabItems } = data;

        const items = tabItems[activeTab];

        if (activeTab === 'freePages') {
            return items.find((x) => x.appPageId === activePageId);
        } else if (activeTab === 'commonPages') {
            return items.find((x) => x.appCommonPageId === activePageId);
        } else if (activeTab === 'settings') {
            if (activePageId === 'customColorSettings') {
                return tabItems['histories'].customColors;
            }

            return items.appSettingQuery[activePageId];
        }

        return null;
    },
});

const getTransitionDestinationRouteList = selector({
    key: 'app-designer-transition-source-selector',
    get: ({ get }) => {
        const data = get(appDesignerState);
        // const { activeTab, activePageId, tabItems } = data;
        const { tabItems } = data;

        let freePages = tabItems.freePages || [];
        let commonPages = tabItems.commonPages || [];

        freePages = [...freePages].map((x) => {
            return { id: x.appPageId, name: x.appPageManagerName, url: x.appPageURLName };
        });

        commonPages = [...commonPages].map((x) => {
            return { id: x.appCommonPageId, name: x.appCommonPageManagerName, url: x.appCommonPageURLName };
        });

        return _.filter([...freePages, ...commonPages], (v) => v.url);
    },
});

export { appDesignerState, getSelectedPageData, getTransitionDestinationRouteList, defaultTabState };
